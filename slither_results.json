{"success": true, "error": null, "results": {"printers": [{"elements": [], "description": "{\n    \"payable\": {\n        \"IMulticall3\": [\n            \"aggregate((address,bytes)[])\",\n            \"aggregate3((address,bool,bytes)[])\",\n            \"aggregate3Value((address,bool,uint256,bytes)[])\",\n            \"blockAndAggregate((address,bytes)[])\",\n            \"tryAggregate(bool,(address,bytes)[])\",\n            \"tryBlockAndAggregate(bool,(address,bytes)[])\"\n        ],\n        \"UUPSUpgradeable\": [\n            \"upgradeToAndCall(address,bytes)\"\n        ],\n        \"ERC1967Proxy\": [\n            \"()\",\n            \"constructor(address,bytes)\"\n        ],\n        \"Proxy\": [\n            \"()\"\n        ],\n        \"IETHPOSDeposit\": [\n            \"deposit(bytes,bytes,bytes,bytes32)\"\n        ],\n        \"IEigenPod\": [\n            \"stake(bytes,bytes,bytes32)\"\n        ],\n        \"IEigenPodManager\": [\n            \"stake(bytes,bytes,bytes32)\"\n        ],\n        \"IMevCommitAVS\": [\n            \"unfreeze(bytes[])\"\n        ],\n        \"IRewardManager\": [\n            \"payProposer(bytes)\"\n        ],\n        \"IVanillaRegistry\": [\n            \"stake(bytes[])\",\n            \"delegateStake(bytes[],address)\",\n            \"addStake(bytes[])\"\n        ],\n        \"RewardManager\": [\n            \"upgradeToAndCall(address,bytes)\",\n            \"()\",\n            \"()\",\n            \"payProposer(bytes)\"\n        ]\n    },\n    \"timestamp\": {},\n    \"block_number\": {},\n    \"msg_sender\": {\n        \"Ownable2StepUpgradeable\": [\n            \"renounceOwnership()\",\n            \"transferOwnership(address)\",\n            \"acceptOwnership()\"\n        ],\n        \"OwnableUpgradeable\": [\n            \"renounceOwnership()\",\n            \"transferOwnership(address)\"\n        ],\n        \"RewardManager\": [\n            \"upgradeToAndCall(address,bytes)\",\n            \"transferOwnership(address)\",\n            \"acceptOwnership()\",\n            \"renounceOwnership()\",\n            \"pause()\",\n            \"unpause()\",\n            \"payProposer(bytes)\",\n            \"enableAutoClaim(bool)\",\n            \"disableAutoClaim()\",\n            \"overrideReceiver(address,bool)\",\n            \"removeOverrideAddress(bool)\",\n            \"claimRewards()\",\n            \"claimOrphanedRewards(bytes[],address)\",\n            \"removeFromAutoClaimBlacklist(address)\",\n            \"setVanillaRegistry(address)\",\n            \"setMevCommitAVS(address)\",\n            \"setMevCommitMiddleware(address)\",\n            \"setAutoClaimGasLimit(uint256)\"\n        ]\n    },\n    \"msg_gas\": {},\n    \"assert\": {\n        \"Fuzz\": {\n            \"payProposer(bytes)\": [\n                {\n                    \"start\": 314,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/fuzzing/properties/PayProposer.sol\",\n                    \"filename_absolute\": \"/Users/pyk/github/pyk/primev-fuzz/test/fuzzing/properties/PayProposer.sol\",\n                    \"filename_short\": \"test/fuzzing/properties/PayProposer.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        12\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ]\n        },\n        \"PayProposerProperties\": {\n            \"payProposer(bytes)\": [\n                {\n                    \"start\": 314,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/fuzzing/properties/PayProposer.sol\",\n                    \"filename_absolute\": \"/Users/pyk/github/pyk/primev-fuzz/test/fuzzing/properties/PayProposer.sol\",\n                    \"filename_short\": \"test/fuzzing/properties/PayProposer.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        12\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ]\n        }\n    },\n    \"constant_functions\": {\n        \"StdAssertions\": [\n            \"failed()\"\n        ],\n        \"stdError\": [\n            \"assertionError()\",\n            \"arithmeticError()\",\n            \"divisionError()\",\n            \"enumConversionError()\",\n            \"encodeStorageError()\",\n            \"popError()\",\n            \"indexOOBError()\",\n            \"memOverflowError()\",\n            \"zeroVarError()\"\n        ],\n        \"StdInvariant\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\"\n        ],\n        \"Test\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ],\n        \"VmSafe\": [\n            \"deriveKey(string,uint32)\",\n            \"deriveKey(string,string,uint32)\",\n            \"deriveKey(string,uint32,string)\",\n            \"deriveKey(string,string,uint32,string)\",\n            \"publicKeyP256(uint256)\",\n            \"signCompact(uint256,bytes32)\",\n            \"signCompact(bytes32)\",\n            \"signCompact(address,bytes32)\",\n            \"signP256(uint256,bytes32)\",\n            \"sign(uint256,bytes32)\",\n            \"sign(bytes32)\",\n            \"sign(address,bytes32)\",\n            \"envAddress(string)\",\n            \"envAddress(string,string)\",\n            \"envBool(string)\",\n            \"envBool(string,string)\",\n            \"envBytes32(string)\",\n            \"envBytes32(string,string)\",\n            \"envBytes(string)\",\n            \"envBytes(string,string)\",\n            \"envExists(string)\",\n            \"envInt(string)\",\n            \"envInt(string,string)\",\n            \"envOr(string,bool)\",\n            \"envOr(string,uint256)\",\n            \"envOr(string,string,address[])\",\n            \"envOr(string,string,bytes32[])\",\n            \"envOr(string,string,string[])\",\n            \"envOr(string,string,bytes[])\",\n            \"envOr(string,int256)\",\n            \"envOr(string,address)\",\n            \"envOr(string,bytes32)\",\n            \"envOr(string,string)\",\n            \"envOr(string,bytes)\",\n            \"envOr(string,string,bool[])\",\n            \"envOr(string,string,uint256[])\",\n            \"envOr(string,string,int256[])\",\n            \"envString(string)\",\n            \"envString(string,string)\",\n            \"envUint(string)\",\n            \"envUint(string,string)\",\n            \"isContext(uint8)\",\n            \"addr(uint256)\",\n            \"getBlobBaseFee()\",\n            \"getBlockNumber()\",\n            \"getBlockTimestamp()\",\n            \"getNonce(address)\",\n            \"getStateDiff()\",\n            \"getStateDiffJson()\",\n            \"lastCallGas()\",\n            \"load(address,bytes32)\",\n            \"exists(string)\",\n            \"fsMetadata(string)\",\n            \"getArtifactPathByCode(bytes)\",\n            \"getArtifactPathByDeployedCode(bytes)\",\n            \"getBroadcast(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64)\",\n            \"getCode(string)\",\n            \"getDeployedCode(string)\",\n            \"getDeployment(string)\",\n            \"getDeployment(string,uint64)\",\n            \"getDeployments(string,uint64)\",\n            \"isDir(string)\",\n            \"isFile(string)\",\n            \"projectRoot()\",\n            \"readDir(string)\",\n            \"readDir(string,uint64)\",\n            \"readDir(string,uint64,bool)\",\n            \"readFile(string)\",\n            \"readFileBinary(string)\",\n            \"readLine(string)\",\n            \"readLink(string)\",\n            \"unixTime()\",\n            \"keyExistsJson(string,string)\",\n            \"parseJsonAddress(string,string)\",\n            \"parseJsonAddressArray(string,string)\",\n            \"parseJsonBool(string,string)\",\n            \"parseJsonBoolArray(string,string)\",\n            \"parseJsonBytes(string,string)\",\n            \"parseJsonBytes32(string,string)\",\n            \"parseJsonBytes32Array(string,string)\",\n            \"parseJsonBytesArray(string,string)\",\n            \"parseJsonInt(string,string)\",\n            \"parseJsonIntArray(string,string)\",\n            \"parseJsonKeys(string,string)\",\n            \"parseJsonString(string,string)\",\n            \"parseJsonStringArray(string,string)\",\n            \"parseJsonTypeArray(string,string,string)\",\n            \"parseJsonType(string,string)\",\n            \"parseJsonType(string,string,string)\",\n            \"parseJsonUint(string,string)\",\n            \"parseJsonUintArray(string,string)\",\n            \"parseJson(string)\",\n            \"parseJson(string,string)\",\n            \"serializeJsonType(string,bytes)\",\n            \"keyExists(string,string)\",\n            \"indexOf(string,string)\",\n            \"parseAddress(string)\",\n            \"parseBool(string)\",\n            \"parseBytes(string)\",\n            \"parseBytes32(string)\",\n            \"parseInt(string)\",\n            \"parseUint(string)\",\n            \"replace(string,string,string)\",\n            \"split(string,string)\",\n            \"toLowercase(string)\",\n            \"toString(address)\",\n            \"toString(bytes)\",\n            \"toString(bytes32)\",\n            \"toString(bool)\",\n            \"toString(uint256)\",\n            \"toString(int256)\",\n            \"toUppercase(string)\",\n            \"trim(string)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(int256,int256,uint256)\",\n            \"assertApproxEqAbs(int256,int256,uint256,string)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqRel(uint256,uint256,uint256)\",\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\",\n            \"assertApproxEqRel(int256,int256,uint256)\",\n            \"assertApproxEqRel(int256,int256,uint256,string)\",\n            \"assertEqDecimal(uint256,uint256,uint256)\",\n            \"assertEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertEqDecimal(int256,int256,uint256)\",\n            \"assertEqDecimal(int256,int256,uint256,string)\",\n            \"assertEq(bool,bool)\",\n            \"assertEq(bool,bool,string)\",\n            \"assertEq(string,string)\",\n            \"assertEq(string,string,string)\",\n            \"assertEq(bytes,bytes)\",\n            \"assertEq(bytes,bytes,string)\",\n            \"assertEq(bool[],bool[])\",\n            \"assertEq(bool[],bool[],string)\",\n            \"assertEq(uint256[],uint256[])\",\n            \"assertEq(uint256[],uint256[],string)\",\n            \"assertEq(int256[],int256[])\",\n            \"assertEq(int256[],int256[],string)\",\n            \"assertEq(uint256,uint256)\",\n            \"assertEq(address[],address[])\",\n            \"assertEq(address[],address[],string)\",\n            \"assertEq(bytes32[],bytes32[])\",\n            \"assertEq(bytes32[],bytes32[],string)\",\n            \"assertEq(string[],string[])\",\n            \"assertEq(string[],string[],string)\",\n            \"assertEq(bytes[],bytes[])\",\n            \"assertEq(bytes[],bytes[],string)\",\n            \"assertEq(uint256,uint256,string)\",\n            \"assertEq(int256,int256)\",\n            \"assertEq(int256,int256,string)\",\n            \"assertEq(address,address)\",\n            \"assertEq(address,address,string)\",\n            \"assertEq(bytes32,bytes32)\",\n            \"assertEq(bytes32,bytes32,string)\",\n            \"assertFalse(bool)\",\n            \"assertFalse(bool,string)\",\n            \"assertGeDecimal(uint256,uint256,uint256)\",\n            \"assertGeDecimal(uint256,uint256,uint256,string)\",\n            \"assertGeDecimal(int256,int256,uint256)\",\n            \"assertGeDecimal(int256,int256,uint256,string)\",\n            \"assertGe(uint256,uint256)\",\n            \"assertGe(uint256,uint256,string)\",\n            \"assertGe(int256,int256)\",\n            \"assertGe(int256,int256,string)\",\n            \"assertGtDecimal(uint256,uint256,uint256)\",\n            \"assertGtDecimal(uint256,uint256,uint256,string)\",\n            \"assertGtDecimal(int256,int256,uint256)\",\n            \"assertGtDecimal(int256,int256,uint256,string)\",\n            \"assertGt(uint256,uint256)\",\n            \"assertGt(uint256,uint256,string)\",\n            \"assertGt(int256,int256)\",\n            \"assertGt(int256,int256,string)\",\n            \"assertLeDecimal(uint256,uint256,uint256)\",\n            \"assertLeDecimal(uint256,uint256,uint256,string)\",\n            \"assertLeDecimal(int256,int256,uint256)\",\n            \"assertLeDecimal(int256,int256,uint256,string)\",\n            \"assertLe(uint256,uint256)\",\n            \"assertLe(uint256,uint256,string)\",\n            \"assertLe(int256,int256)\",\n            \"assertLe(int256,int256,string)\",\n            \"assertLtDecimal(uint256,uint256,uint256)\",\n            \"assertLtDecimal(uint256,uint256,uint256,string)\",\n            \"assertLtDecimal(int256,int256,uint256)\",\n            \"assertLtDecimal(int256,int256,uint256,string)\",\n            \"assertLt(uint256,uint256)\",\n            \"assertLt(uint256,uint256,string)\",\n            \"assertLt(int256,int256)\",\n            \"assertLt(int256,int256,string)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertNotEqDecimal(int256,int256,uint256)\",\n            \"assertNotEqDecimal(int256,int256,uint256,string)\",\n            \"assertNotEq(bool,bool)\",\n            \"assertNotEq(bool,bool,string)\",\n            \"assertNotEq(string,string)\",\n            \"assertNotEq(string,string,string)\",\n            \"assertNotEq(bytes,bytes)\",\n            \"assertNotEq(bytes,bytes,string)\",\n            \"assertNotEq(bool[],bool[])\",\n            \"assertNotEq(bool[],bool[],string)\",\n            \"assertNotEq(uint256[],uint256[])\",\n            \"assertNotEq(uint256[],uint256[],string)\",\n            \"assertNotEq(int256[],int256[])\",\n            \"assertNotEq(int256[],int256[],string)\",\n            \"assertNotEq(uint256,uint256)\",\n            \"assertNotEq(address[],address[])\",\n            \"assertNotEq(address[],address[],string)\",\n            \"assertNotEq(bytes32[],bytes32[])\",\n            \"assertNotEq(bytes32[],bytes32[],string)\",\n            \"assertNotEq(string[],string[])\",\n            \"assertNotEq(string[],string[],string)\",\n            \"assertNotEq(bytes[],bytes[])\",\n            \"assertNotEq(bytes[],bytes[],string)\",\n            \"assertNotEq(uint256,uint256,string)\",\n            \"assertNotEq(int256,int256)\",\n            \"assertNotEq(int256,int256,string)\",\n            \"assertNotEq(address,address)\",\n            \"assertNotEq(address,address,string)\",\n            \"assertNotEq(bytes32,bytes32)\",\n            \"assertNotEq(bytes32,bytes32,string)\",\n            \"assertTrue(bool)\",\n            \"assertTrue(bool,string)\",\n            \"assume(bool)\",\n            \"assumeNoRevert()\",\n            \"assumeNoRevert((address,bool,bytes))\",\n            \"assumeNoRevert((address,bool,bytes)[])\",\n            \"breakpoint(string)\",\n            \"breakpoint(string,bool)\",\n            \"foundryVersionAtLeast(string)\",\n            \"foundryVersionCmp(string)\",\n            \"getChain(string)\",\n            \"getChain(uint256)\",\n            \"getFoundryVersion()\",\n            \"rpcUrl(string)\",\n            \"rpcUrlStructs()\",\n            \"rpcUrls()\",\n            \"keyExistsToml(string,string)\",\n            \"parseTomlAddress(string,string)\",\n            \"parseTomlAddressArray(string,string)\",\n            \"parseTomlBool(string,string)\",\n            \"parseTomlBoolArray(string,string)\",\n            \"parseTomlBytes(string,string)\",\n            \"parseTomlBytes32(string,string)\",\n            \"parseTomlBytes32Array(string,string)\",\n            \"parseTomlBytesArray(string,string)\",\n            \"parseTomlInt(string,string)\",\n            \"parseTomlIntArray(string,string)\",\n            \"parseTomlKeys(string,string)\",\n            \"parseTomlString(string,string)\",\n            \"parseTomlStringArray(string,string)\",\n            \"parseTomlTypeArray(string,string,string)\",\n            \"parseTomlType(string,string)\",\n            \"parseTomlType(string,string,string)\",\n            \"parseTomlUint(string,string)\",\n            \"parseTomlUintArray(string,string)\",\n            \"parseToml(string)\",\n            \"parseToml(string,string)\",\n            \"computeCreate2Address(bytes32,bytes32,address)\",\n            \"computeCreate2Address(bytes32,bytes32)\",\n            \"computeCreateAddress(address,uint256)\",\n            \"ensNamehash(string)\",\n            \"getLabel(address)\",\n            \"pauseTracing()\",\n            \"randomBool()\",\n            \"randomBytes(uint256)\",\n            \"randomBytes4()\",\n            \"randomBytes8()\",\n            \"randomInt()\",\n            \"randomInt(uint256)\",\n            \"randomUint(uint256)\",\n            \"resumeTracing()\",\n            \"toBase64URL(bytes)\",\n            \"toBase64URL(string)\",\n            \"toBase64(bytes)\",\n            \"toBase64(string)\"\n        ],\n        \"Vm\": [\n            \"deriveKey(string,uint32)\",\n            \"deriveKey(string,string,uint32)\",\n            \"deriveKey(string,uint32,string)\",\n            \"deriveKey(string,string,uint32,string)\",\n            \"publicKeyP256(uint256)\",\n            \"signCompact(uint256,bytes32)\",\n            \"signCompact(bytes32)\",\n            \"signCompact(address,bytes32)\",\n            \"signP256(uint256,bytes32)\",\n            \"sign(uint256,bytes32)\",\n            \"sign(bytes32)\",\n            \"sign(address,bytes32)\",\n            \"envAddress(string)\",\n            \"envAddress(string,string)\",\n            \"envBool(string)\",\n            \"envBool(string,string)\",\n            \"envBytes32(string)\",\n            \"envBytes32(string,string)\",\n            \"envBytes(string)\",\n            \"envBytes(string,string)\",\n            \"envExists(string)\",\n            \"envInt(string)\",\n            \"envInt(string,string)\",\n            \"envOr(string,bool)\",\n            \"envOr(string,uint256)\",\n            \"envOr(string,string,address[])\",\n            \"envOr(string,string,bytes32[])\",\n            \"envOr(string,string,string[])\",\n            \"envOr(string,string,bytes[])\",\n            \"envOr(string,int256)\",\n            \"envOr(string,address)\",\n            \"envOr(string,bytes32)\",\n            \"envOr(string,string)\",\n            \"envOr(string,bytes)\",\n            \"envOr(string,string,bool[])\",\n            \"envOr(string,string,uint256[])\",\n            \"envOr(string,string,int256[])\",\n            \"envString(string)\",\n            \"envString(string,string)\",\n            \"envUint(string)\",\n            \"envUint(string,string)\",\n            \"isContext(uint8)\",\n            \"addr(uint256)\",\n            \"getBlobBaseFee()\",\n            \"getBlockNumber()\",\n            \"getBlockTimestamp()\",\n            \"getNonce(address)\",\n            \"getStateDiff()\",\n            \"getStateDiffJson()\",\n            \"lastCallGas()\",\n            \"load(address,bytes32)\",\n            \"exists(string)\",\n            \"fsMetadata(string)\",\n            \"getArtifactPathByCode(bytes)\",\n            \"getArtifactPathByDeployedCode(bytes)\",\n            \"getBroadcast(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64)\",\n            \"getCode(string)\",\n            \"getDeployedCode(string)\",\n            \"getDeployment(string)\",\n            \"getDeployment(string,uint64)\",\n            \"getDeployments(string,uint64)\",\n            \"isDir(string)\",\n            \"isFile(string)\",\n            \"projectRoot()\",\n            \"readDir(string)\",\n            \"readDir(string,uint64)\",\n            \"readDir(string,uint64,bool)\",\n            \"readFile(string)\",\n            \"readFileBinary(string)\",\n            \"readLine(string)\",\n            \"readLink(string)\",\n            \"unixTime()\",\n            \"keyExistsJson(string,string)\",\n            \"parseJsonAddress(string,string)\",\n            \"parseJsonAddressArray(string,string)\",\n            \"parseJsonBool(string,string)\",\n            \"parseJsonBoolArray(string,string)\",\n            \"parseJsonBytes(string,string)\",\n            \"parseJsonBytes32(string,string)\",\n            \"parseJsonBytes32Array(string,string)\",\n            \"parseJsonBytesArray(string,string)\",\n            \"parseJsonInt(string,string)\",\n            \"parseJsonIntArray(string,string)\",\n            \"parseJsonKeys(string,string)\",\n            \"parseJsonString(string,string)\",\n            \"parseJsonStringArray(string,string)\",\n            \"parseJsonTypeArray(string,string,string)\",\n            \"parseJsonType(string,string)\",\n            \"parseJsonType(string,string,string)\",\n            \"parseJsonUint(string,string)\",\n            \"parseJsonUintArray(string,string)\",\n            \"parseJson(string)\",\n            \"parseJson(string,string)\",\n            \"serializeJsonType(string,bytes)\",\n            \"keyExists(string,string)\",\n            \"indexOf(string,string)\",\n            \"parseAddress(string)\",\n            \"parseBool(string)\",\n            \"parseBytes(string)\",\n            \"parseBytes32(string)\",\n            \"parseInt(string)\",\n            \"parseUint(string)\",\n            \"replace(string,string,string)\",\n            \"split(string,string)\",\n            \"toLowercase(string)\",\n            \"toString(address)\",\n            \"toString(bytes)\",\n            \"toString(bytes32)\",\n            \"toString(bool)\",\n            \"toString(uint256)\",\n            \"toString(int256)\",\n            \"toUppercase(string)\",\n            \"trim(string)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(int256,int256,uint256)\",\n            \"assertApproxEqAbs(int256,int256,uint256,string)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqRel(uint256,uint256,uint256)\",\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\",\n            \"assertApproxEqRel(int256,int256,uint256)\",\n            \"assertApproxEqRel(int256,int256,uint256,string)\",\n            \"assertEqDecimal(uint256,uint256,uint256)\",\n            \"assertEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertEqDecimal(int256,int256,uint256)\",\n            \"assertEqDecimal(int256,int256,uint256,string)\",\n            \"assertEq(bool,bool)\",\n            \"assertEq(bool,bool,string)\",\n            \"assertEq(string,string)\",\n            \"assertEq(string,string,string)\",\n            \"assertEq(bytes,bytes)\",\n            \"assertEq(bytes,bytes,string)\",\n            \"assertEq(bool[],bool[])\",\n            \"assertEq(bool[],bool[],string)\",\n            \"assertEq(uint256[],uint256[])\",\n            \"assertEq(uint256[],uint256[],string)\",\n            \"assertEq(int256[],int256[])\",\n            \"assertEq(int256[],int256[],string)\",\n            \"assertEq(uint256,uint256)\",\n            \"assertEq(address[],address[])\",\n            \"assertEq(address[],address[],string)\",\n            \"assertEq(bytes32[],bytes32[])\",\n            \"assertEq(bytes32[],bytes32[],string)\",\n            \"assertEq(string[],string[])\",\n            \"assertEq(string[],string[],string)\",\n            \"assertEq(bytes[],bytes[])\",\n            \"assertEq(bytes[],bytes[],string)\",\n            \"assertEq(uint256,uint256,string)\",\n            \"assertEq(int256,int256)\",\n            \"assertEq(int256,int256,string)\",\n            \"assertEq(address,address)\",\n            \"assertEq(address,address,string)\",\n            \"assertEq(bytes32,bytes32)\",\n            \"assertEq(bytes32,bytes32,string)\",\n            \"assertFalse(bool)\",\n            \"assertFalse(bool,string)\",\n            \"assertGeDecimal(uint256,uint256,uint256)\",\n            \"assertGeDecimal(uint256,uint256,uint256,string)\",\n            \"assertGeDecimal(int256,int256,uint256)\",\n            \"assertGeDecimal(int256,int256,uint256,string)\",\n            \"assertGe(uint256,uint256)\",\n            \"assertGe(uint256,uint256,string)\",\n            \"assertGe(int256,int256)\",\n            \"assertGe(int256,int256,string)\",\n            \"assertGtDecimal(uint256,uint256,uint256)\",\n            \"assertGtDecimal(uint256,uint256,uint256,string)\",\n            \"assertGtDecimal(int256,int256,uint256)\",\n            \"assertGtDecimal(int256,int256,uint256,string)\",\n            \"assertGt(uint256,uint256)\",\n            \"assertGt(uint256,uint256,string)\",\n            \"assertGt(int256,int256)\",\n            \"assertGt(int256,int256,string)\",\n            \"assertLeDecimal(uint256,uint256,uint256)\",\n            \"assertLeDecimal(uint256,uint256,uint256,string)\",\n            \"assertLeDecimal(int256,int256,uint256)\",\n            \"assertLeDecimal(int256,int256,uint256,string)\",\n            \"assertLe(uint256,uint256)\",\n            \"assertLe(uint256,uint256,string)\",\n            \"assertLe(int256,int256)\",\n            \"assertLe(int256,int256,string)\",\n            \"assertLtDecimal(uint256,uint256,uint256)\",\n            \"assertLtDecimal(uint256,uint256,uint256,string)\",\n            \"assertLtDecimal(int256,int256,uint256)\",\n            \"assertLtDecimal(int256,int256,uint256,string)\",\n            \"assertLt(uint256,uint256)\",\n            \"assertLt(uint256,uint256,string)\",\n            \"assertLt(int256,int256)\",\n            \"assertLt(int256,int256,string)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertNotEqDecimal(int256,int256,uint256)\",\n            \"assertNotEqDecimal(int256,int256,uint256,string)\",\n            \"assertNotEq(bool,bool)\",\n            \"assertNotEq(bool,bool,string)\",\n            \"assertNotEq(string,string)\",\n            \"assertNotEq(string,string,string)\",\n            \"assertNotEq(bytes,bytes)\",\n            \"assertNotEq(bytes,bytes,string)\",\n            \"assertNotEq(bool[],bool[])\",\n            \"assertNotEq(bool[],bool[],string)\",\n            \"assertNotEq(uint256[],uint256[])\",\n            \"assertNotEq(uint256[],uint256[],string)\",\n            \"assertNotEq(int256[],int256[])\",\n            \"assertNotEq(int256[],int256[],string)\",\n            \"assertNotEq(uint256,uint256)\",\n            \"assertNotEq(address[],address[])\",\n            \"assertNotEq(address[],address[],string)\",\n            \"assertNotEq(bytes32[],bytes32[])\",\n            \"assertNotEq(bytes32[],bytes32[],string)\",\n            \"assertNotEq(string[],string[])\",\n            \"assertNotEq(string[],string[],string)\",\n            \"assertNotEq(bytes[],bytes[])\",\n            \"assertNotEq(bytes[],bytes[],string)\",\n            \"assertNotEq(uint256,uint256,string)\",\n            \"assertNotEq(int256,int256)\",\n            \"assertNotEq(int256,int256,string)\",\n            \"assertNotEq(address,address)\",\n            \"assertNotEq(address,address,string)\",\n            \"assertNotEq(bytes32,bytes32)\",\n            \"assertNotEq(bytes32,bytes32,string)\",\n            \"assertTrue(bool)\",\n            \"assertTrue(bool,string)\",\n            \"assume(bool)\",\n            \"assumeNoRevert()\",\n            \"assumeNoRevert((address,bool,bytes))\",\n            \"assumeNoRevert((address,bool,bytes)[])\",\n            \"breakpoint(string)\",\n            \"breakpoint(string,bool)\",\n            \"foundryVersionAtLeast(string)\",\n            \"foundryVersionCmp(string)\",\n            \"getChain(string)\",\n            \"getChain(uint256)\",\n            \"getFoundryVersion()\",\n            \"rpcUrl(string)\",\n            \"rpcUrlStructs()\",\n            \"rpcUrls()\",\n            \"keyExistsToml(string,string)\",\n            \"parseTomlAddress(string,string)\",\n            \"parseTomlAddressArray(string,string)\",\n            \"parseTomlBool(string,string)\",\n            \"parseTomlBoolArray(string,string)\",\n            \"parseTomlBytes(string,string)\",\n            \"parseTomlBytes32(string,string)\",\n            \"parseTomlBytes32Array(string,string)\",\n            \"parseTomlBytesArray(string,string)\",\n            \"parseTomlInt(string,string)\",\n            \"parseTomlIntArray(string,string)\",\n            \"parseTomlKeys(string,string)\",\n            \"parseTomlString(string,string)\",\n            \"parseTomlStringArray(string,string)\",\n            \"parseTomlTypeArray(string,string,string)\",\n            \"parseTomlType(string,string)\",\n            \"parseTomlType(string,string,string)\",\n            \"parseTomlUint(string,string)\",\n            \"parseTomlUintArray(string,string)\",\n            \"parseToml(string)\",\n            \"parseToml(string,string)\",\n            \"computeCreate2Address(bytes32,bytes32,address)\",\n            \"computeCreate2Address(bytes32,bytes32)\",\n            \"computeCreateAddress(address,uint256)\",\n            \"ensNamehash(string)\",\n            \"getLabel(address)\",\n            \"pauseTracing()\",\n            \"randomBool()\",\n            \"randomBytes(uint256)\",\n            \"randomBytes4()\",\n            \"randomBytes8()\",\n            \"randomInt()\",\n            \"randomInt(uint256)\",\n            \"randomUint(uint256)\",\n            \"resumeTracing()\",\n            \"toBase64URL(bytes)\",\n            \"toBase64URL(string)\",\n            \"toBase64(bytes)\",\n            \"toBase64(string)\",\n            \"activeFork()\",\n            \"getBlobhashes()\",\n            \"isPersistent(address)\"\n        ],\n        \"IMulticall3\": [\n            \"getBasefee()\",\n            \"getBlockHash(uint256)\",\n            \"getBlockNumber()\",\n            \"getChainId()\",\n            \"getCurrentBlockCoinbase()\",\n            \"getCurrentBlockDifficulty()\",\n            \"getCurrentBlockGasLimit()\",\n            \"getCurrentBlockTimestamp()\",\n            \"getEthBalance(address)\",\n            \"getLastBlockHash()\"\n        ],\n        \"Ownable2StepUpgradeable\": [\n            \"owner()\",\n            \"pendingOwner()\"\n        ],\n        \"OwnableUpgradeable\": [\n            \"owner()\"\n        ],\n        \"UUPSUpgradeable\": [\n            \"proxiableUUID()\",\n            \"UPGRADE_INTERFACE_VERSION()\"\n        ],\n        \"PausableUpgradeable\": [\n            \"paused()\"\n        ],\n        \"IERC1822Proxiable\": [\n            \"proxiableUUID()\"\n        ],\n        \"IBeacon\": [\n            \"implementation()\"\n        ],\n        \"IERC20\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"IAVSDirectory\": [\n            \"operatorSaltIsSpent(address,bytes32)\",\n            \"calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)\",\n            \"OPERATOR_AVS_REGISTRATION_TYPEHASH()\",\n            \"domainSeparator()\"\n        ],\n        \"IDelegationManager\": [\n            \"delegatedTo(address)\",\n            \"operatorDetails(address)\",\n            \"delegationApprover(address)\",\n            \"stakerOptOutWindowBlocks(address)\",\n            \"getOperatorShares(address,address[])\",\n            \"getWithdrawalDelay(address[])\",\n            \"operatorShares(address,address)\",\n            \"getDelegatableShares(address)\",\n            \"isDelegated(address)\",\n            \"isOperator(address)\",\n            \"stakerNonce(address)\",\n            \"delegationApproverSaltIsSpent(address,bytes32)\",\n            \"minWithdrawalDelayBlocks()\",\n            \"strategyWithdrawalDelayBlocks(address)\",\n            \"beaconChainETHStrategy()\",\n            \"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\",\n            \"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\",\n            \"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\",\n            \"DOMAIN_TYPEHASH()\",\n            \"STAKER_DELEGATION_TYPEHASH()\",\n            \"DELEGATION_APPROVAL_TYPEHASH()\",\n            \"domainSeparator()\",\n            \"cumulativeWithdrawalsQueued(address)\",\n            \"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\"\n        ],\n        \"IETHPOSDeposit\": [\n            \"get_deposit_root()\",\n            \"get_deposit_count()\"\n        ],\n        \"IEigenPod\": [\n            \"proofSubmitter()\",\n            \"withdrawableRestakedExecutionLayerGwei()\",\n            \"eigenPodManager()\",\n            \"podOwner()\",\n            \"validatorPubkeyHashToInfo(bytes32)\",\n            \"validatorPubkeyToInfo(bytes)\",\n            \"validatorStatus(bytes32)\",\n            \"validatorStatus(bytes)\",\n            \"activeValidatorCount()\",\n            \"lastCheckpointTimestamp()\",\n            \"currentCheckpointTimestamp()\",\n            \"currentCheckpoint()\",\n            \"checkpointBalanceExitedGwei(uint64)\",\n            \"getParentBlockRoot(uint64)\"\n        ],\n        \"IEigenPodManager\": [\n            \"pauserRegistry()\",\n            \"paused()\",\n            \"paused(uint8)\",\n            \"ownerToPod(address)\",\n            \"getPod(address)\",\n            \"ethPOS()\",\n            \"eigenPodBeacon()\",\n            \"strategyManager()\",\n            \"slasher()\",\n            \"hasPod(address)\",\n            \"numPods()\",\n            \"podOwnerShares(address)\",\n            \"beaconChainETHStrategy()\"\n        ],\n        \"IPausable\": [\n            \"pauserRegistry()\",\n            \"paused()\",\n            \"paused(uint8)\"\n        ],\n        \"IPauserRegistry\": [\n            \"isPauser(address)\",\n            \"unpauser()\"\n        ],\n        \"ISlasher\": [\n            \"strategyManager()\",\n            \"delegation()\",\n            \"isFrozen(address)\",\n            \"canSlash(address,address)\",\n            \"contractCanSlashOperatorUntilBlock(address,address)\",\n            \"latestUpdateBlock(address,address)\",\n            \"getCorrectValueForInsertAfter(address,uint32)\",\n            \"operatorToMiddlewareTimes(address,uint256)\",\n            \"middlewareTimesLength(address)\",\n            \"getMiddlewareTimesIndexStalestUpdateBlock(address,uint32)\",\n            \"getMiddlewareTimesIndexServeUntilBlock(address,uint32)\",\n            \"operatorWhitelistedContractsLinkedListSize(address)\",\n            \"operatorWhitelistedContractsLinkedListEntry(address,address)\"\n        ],\n        \"IStrategy\": [\n            \"shares(address)\",\n            \"sharesToUnderlyingView(uint256)\",\n            \"underlyingToSharesView(uint256)\",\n            \"userUnderlyingView(address)\",\n            \"underlyingToken()\",\n            \"totalShares()\",\n            \"explanation()\"\n        ],\n        \"IStrategyManager\": [\n            \"stakerStrategyShares(address,address)\",\n            \"getDeposits(address)\",\n            \"stakerStrategyListLength(address)\",\n            \"delegation()\",\n            \"slasher()\",\n            \"eigenPodManager()\",\n            \"strategyWhitelister()\",\n            \"strategyIsWhitelistedForDeposit(address)\",\n            \"thirdPartyTransfersForbidden(address)\",\n            \"domainSeparator()\"\n        ],\n        \"IMevCommitAVS\": [\n            \"isValidatorOptedIn(bytes)\",\n            \"getOperatorRegInfo(address)\",\n            \"getValidatorRegInfo(bytes)\",\n            \"getLSTRestakerRegInfo(address)\",\n            \"avsDirectory()\",\n            \"validatorRegistrations(bytes)\"\n        ],\n        \"IMevCommitMiddleware\": [\n            \"isValidatorOptedIn(bytes)\",\n            \"isValidatorSlashable(bytes)\",\n            \"potentialSlashableValidators(address,address)\",\n            \"getPositionInValset(bytes,address,address)\",\n            \"getNumSlashableVals(address,address)\",\n            \"pubkeyAtPositionInValset(uint256,address,address)\",\n            \"valsetLength(address,address)\",\n            \"validatorRecords(bytes)\"\n        ],\n        \"IVanillaRegistry\": [\n            \"isValidatorOptedIn(bytes)\",\n            \"getStakedValidator(bytes)\",\n            \"getStakedAmount(bytes)\",\n            \"isUnstaking(bytes)\",\n            \"getBlocksTillWithdrawAllowed(bytes)\",\n            \"stakedValidators(bytes)\"\n        ],\n        \"IRegistry\": [\n            \"isEntity(address)\",\n            \"totalEntities()\",\n            \"entity(uint256)\"\n        ],\n        \"RewardManager\": [\n            \"proxiableUUID()\",\n            \"paused()\",\n            \"pendingOwner()\",\n            \"owner()\",\n            \"autoClaimGasLimit()\",\n            \"autoClaim(address)\",\n            \"autoClaimBlacklist(address)\",\n            \"unclaimedRewards(address)\",\n            \"orphanedRewards(bytes)\",\n            \"overrideAddresses(address)\",\n            \"UPGRADE_INTERFACE_VERSION()\"\n        ],\n        \"RewardManagerStorage\": [\n            \"autoClaimGasLimit()\",\n            \"autoClaim(address)\",\n            \"autoClaimBlacklist(address)\",\n            \"unclaimedRewards(address)\",\n            \"orphanedRewards(bytes)\",\n            \"overrideAddresses(address)\"\n        ],\n        \"Fuzz\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ],\n        \"Setup\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ],\n        \"BaseProperties\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ],\n        \"PayProposerProperties\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ]\n    },\n    \"constants_used\": {\n        \"StdAssertions\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ]\n            ]\n        },\n        \"Test\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ]\n            ]\n        },\n        \"Ownable2StepUpgradeable\": {\n            \"owner()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"renounceOwnership()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pendingOwner()\": [\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"transferOwnership(address)\": [\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"acceptOwnership()\": [\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"OwnableUpgradeable\": {\n            \"owner()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"renounceOwnership()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"transferOwnership(address)\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"UUPSUpgradeable\": {\n            \"upgradeToAndCall(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"PausableUpgradeable\": {\n            \"paused()\": [\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ERC1967Proxy\": {\n            \"()\": [\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Proxy\": {\n            \"()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"RewardManager\": {\n            \"upgradeToAndCall(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"paused()\": [\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pendingOwner()\": [\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"transferOwnership(address)\": [\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"acceptOwnership()\": [\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"owner()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"renounceOwnership()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor()\": [\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18446744073709551615\",\n                        \"type\": \"uint64\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"initialize(address,address,address,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pause()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"unpause()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"payProposer(bytes)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"48\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"enableAutoClaim(bool)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"disableAutoClaim()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"overrideReceiver(address,bool)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removeOverrideAddress(bool)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimRewards()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimOrphanedRewards(bytes[],address)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removeFromAutoClaimBlacklist(address)\": [\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"setVanillaRegistry(address)\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"setMevCommitAVS(address)\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"setMevCommitMiddleware(address)\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"setAutoClaimGasLimit(uint256)\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Fuzz\": {\n            \"payProposer(bytes)\": [\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ]\n            ],\n            \"constructor()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1393268644\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"RewardManagerProxy\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"RewardManagerOwner\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"RewardManagerImplementation\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Setup\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ]\n            ]\n        },\n        \"BaseProperties\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ]\n            ]\n        },\n        \"PayProposerProperties\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ]\n            ],\n            \"payProposer(bytes)\": [\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        }\n    },\n    \"constants_used_in_binary\": {\n        \"UUPSUpgradeable\": {\n            \"upgradeToAndCall(address,bytes)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ERC1967Proxy\": {\n            \"()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,bytes)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"Proxy\": {\n            \"()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"RewardManager\": {\n            \"upgradeToAndCall(address,bytes)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"initialize(address,address,address,uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"payProposer(bytes)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"48\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"enableAutoClaim(bool)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"overrideReceiver(address,bool)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"removeOverrideAddress(bool)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimRewards()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimOrphanedRewards(bytes[],address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setAutoClaimGasLimit(uint256)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        }\n    },\n    \"functions_relations\": {\n        \"CommonBase\": {},\n        \"TestBase\": {},\n        \"ScriptBase\": {},\n        \"StdAssertions\": {\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"StdChains\": {},\n        \"StdCheatsSafe\": {},\n        \"StdCheats\": {},\n        \"StdConstants\": {},\n        \"stdError\": {},\n        \"StdInvariant\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"stdJson\": {},\n        \"stdMath\": {},\n        \"stdStorageSafe\": {},\n        \"stdStorage\": {},\n        \"StdStyle\": {},\n        \"stdToml\": {},\n        \"StdUtils\": {},\n        \"Test\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"VmSafe\": {\n            \"createWallet(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"publicKeyP256(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKey(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signP256(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envExists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isContext(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEnv(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accesses(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eth_getLogs(uint256,uint256,address,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobBaseFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingKeyAndParentOf(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingLength(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingSlotAt(address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce((address,uint256,uint256,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRecordedLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiffJson()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCallGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"record()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startStateDiffRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"closeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"exists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fsMetadata(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByDeployedCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcast(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployedCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployments(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"projectRoot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prompt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecret(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecretUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFileBinary(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLine(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLink(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryFfi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unixTime()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFileBinary(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeLine(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUintToHex(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExists(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachBlob(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcastRawTransaction(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWallets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contains(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"indexOf(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"replace(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"split(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toLowercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toUppercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"trim(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assume(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionAtLeast(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionCmp(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getFoundryVersion()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrl(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrlStructs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sleep(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreateAddress(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyStorage(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ensNamehash(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLabel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"label(address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBool()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes4()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes8()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"shuffle(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sort(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Vm\": {\n            \"createWallet(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"publicKeyP256(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKey(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signP256(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envExists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isContext(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEnv(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accesses(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eth_getLogs(uint256,uint256,address,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobBaseFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingKeyAndParentOf(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingLength(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingSlotAt(address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce((address,uint256,uint256,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRecordedLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiffJson()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCallGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"record()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startStateDiffRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"closeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"exists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fsMetadata(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByDeployedCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcast(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployedCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployments(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"projectRoot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prompt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecret(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecretUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFileBinary(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLine(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLink(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryFfi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unixTime()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFileBinary(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeLine(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUintToHex(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExists(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachBlob(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcastRawTransaction(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWallets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contains(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"indexOf(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"replace(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"split(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toLowercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toUppercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"trim(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assume(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionAtLeast(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionCmp(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getFoundryVersion()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrl(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrlStructs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sleep(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreateAddress(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyStorage(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ensNamehash(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLabel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"label(address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBool()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes4()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes8()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"shuffle(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sort(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accessList((address,bytes32[])[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"activeFork()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowCheatcodes(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blobBaseFee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blobhashes(bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"chainId(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"clearMockedCalls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cloneAccount(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"coinbase(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cool(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"coolSlot(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deal(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteStateSnapshot(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteStateSnapshots()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"difficulty(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"dumpState(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"etch(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobhashes()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isPersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"loadAllocs(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,uint256,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,uint256,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCalls(address,bytes,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCalls(address,uint256,bytes,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockFunction(address,address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"noAccessList()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readCallers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToState(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToStateAndDelete(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokePersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokePersistent(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"roll(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"selectFork(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setBlockhash(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonce(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonceUnsafe(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotGasLastCall(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotGasLastCall(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotState()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotValue(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotValue(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startSnapshotGas(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startSnapshotGas(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopPrank()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"store(address,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"txGasPrice(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"warmSlot(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"warp(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteSnapshot(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteSnapshots()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToAndDelete(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertTo(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCallMinGas(address,uint256,uint64,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCallMinGas(address,uint256,uint64,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,uint64,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,uint64,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCreate(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCreate2(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(bool,bool,bool,bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectPartialRevert(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectPartialRevert(bytes4,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectSafeMemory(uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectSafeMemoryCall(uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"skip(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"skip(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopExpectSafeMemory()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"interceptInitcode()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"console\": {},\n        \"IMulticall3\": {\n            \"aggregate((address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregate3((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregate3Value((address,bool,uint256,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blockAndAggregate((address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBasefee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockHash(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChainId()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockCoinbase()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockDifficulty()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockGasLimit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getEthBalance(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLastBlockHash()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryAggregate(bool,(address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryBlockAndAggregate(bool,(address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"safeconsole\": {},\n        \"Ownable2StepUpgradeable\": {\n            \"owner()\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ]\n            },\n            \"renounceOwnership()\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ]\n            },\n            \"pendingOwner()\": {\n                \"impacts\": [\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ],\n                \"is_impacted_by\": [\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ]\n            },\n            \"transferOwnership(address)\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ]\n            },\n            \"acceptOwnership()\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ]\n            }\n        },\n        \"OwnableUpgradeable\": {\n            \"owner()\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\"\n                ]\n            },\n            \"renounceOwnership()\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\"\n                ]\n            },\n            \"transferOwnership(address)\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\"\n                ]\n            }\n        },\n        \"Initializable\": {},\n        \"UUPSUpgradeable\": {\n            \"proxiableUUID()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"upgradeToAndCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ContextUpgradeable\": {},\n        \"PausableUpgradeable\": {\n            \"paused()\": {\n                \"impacts\": [\n                    \"paused()\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\"\n                ]\n            }\n        },\n        \"ReentrancyGuardUpgradeable\": {},\n        \"IERC1822Proxiable\": {\n            \"proxiableUUID()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ERC1967Proxy\": {\n            \"()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ERC1967Utils\": {},\n        \"Proxy\": {\n            \"()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IBeacon\": {\n            \"implementation()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC20\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Address\": {},\n        \"StorageSlot\": {},\n        \"Math\": {},\n        \"Checkpoints\": {},\n        \"BeaconChainProofs\": {},\n        \"Endian\": {},\n        \"IAVSDirectory\": {\n            \"registerOperatorToAVS(address,(bytes,bytes32,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterOperatorFromAVS(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updateAVSMetadataURI(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"operatorSaltIsSpent(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"OPERATOR_AVS_REGISTRATION_TYPEHASH()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cancelSalt(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"domainSeparator()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IDelegationManager\": {\n            \"registerAsOperator((address,address,uint32),string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"modifyOperatorDetails((address,address,uint32))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updateOperatorMetadataURI(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegateTo(address,(bytes,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"undelegate(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"queueWithdrawals((address[],uint256[],address)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"increaseDelegatedShares(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decreaseDelegatedShares(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setMinWithdrawalDelayBlocks(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setStrategyWithdrawalDelayBlocks(address[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegatedTo(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"operatorDetails(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegationApprover(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stakerOptOutWindowBlocks(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getOperatorShares(address,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWithdrawalDelay(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"operatorShares(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDelegatableShares(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDelegated(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isOperator(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stakerNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegationApproverSaltIsSpent(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"minWithdrawalDelayBlocks()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"strategyWithdrawalDelayBlocks(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"beaconChainETHStrategy()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"DOMAIN_TYPEHASH()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"STAKER_DELEGATION_TYPEHASH()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"DELEGATION_APPROVAL_TYPEHASH()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"domainSeparator()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cumulativeWithdrawalsQueued(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IETHPOSDeposit\": {\n            \"deposit(bytes,bytes,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"get_deposit_root()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"get_deposit_count()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IEigenPod\": {\n            \"initialize(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stake(bytes,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdrawRestakedBeaconChainETH(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startCheckpoint(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"verifyCheckpointProofs((bytes32,bytes),(bytes32,bytes32,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"verifyWithdrawalCredentials(uint64,(bytes32,bytes),uint40[],bytes[],bytes32[][])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"verifyStaleBalance(uint64,(bytes32,bytes),(bytes32[],bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recoverTokens(address[],uint256[],address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setProofSubmitter(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"proofSubmitter()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdrawableRestakedExecutionLayerGwei()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eigenPodManager()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"podOwner()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"validatorPubkeyHashToInfo(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"validatorPubkeyToInfo(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"validatorStatus(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"validatorStatus(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"activeValidatorCount()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCheckpointTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"currentCheckpointTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"currentCheckpoint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"checkpointBalanceExitedGwei(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getParentBlockRoot(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IEigenPodManager\": {\n            \"pauserRegistry()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pause(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseAll()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unpause(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"paused()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"paused(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setPauserRegistry(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createPod()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stake(bytes,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordBeaconChainETHBalanceUpdate(address,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ownerToPod(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getPod(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ethPOS()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eigenPodBeacon()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"strategyManager()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"slasher()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasPod(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"numPods()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"podOwnerShares(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"beaconChainETHStrategy()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeShares(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addShares(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdrawSharesAsTokens(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IPausable\": {\n            \"pauserRegistry()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pause(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseAll()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unpause(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"paused()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"paused(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setPauserRegistry(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IPauserRegistry\": {\n            \"isPauser(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unpauser()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ISignatureUtils\": {},\n        \"ISlasher\": {\n            \"optIntoSlashing(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"freezeOperator(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetFrozenStatus(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordFirstStakeUpdate(address,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordStakeUpdate(address,uint32,uint32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLastStakeUpdateAndRevokeSlashingAbility(address,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"strategyManager()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegation()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFrozen(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"canSlash(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contractCanSlashOperatorUntilBlock(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"latestUpdateBlock(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCorrectValueForInsertAfter(address,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"canWithdraw(address,uint32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"operatorToMiddlewareTimes(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"middlewareTimesLength(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMiddlewareTimesIndexStalestUpdateBlock(address,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMiddlewareTimesIndexServeUntilBlock(address,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"operatorWhitelistedContractsLinkedListSize(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"operatorWhitelistedContractsLinkedListEntry(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IStrategy\": {\n            \"deposit(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdraw(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sharesToUnderlying(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"underlyingToShares(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"userUnderlying(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"shares(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sharesToUnderlyingView(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"underlyingToSharesView(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"userUnderlyingView(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"underlyingToken()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalShares()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"explanation()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IStrategyManager\": {\n            \"depositIntoStrategy(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeShares(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addShares(address,address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdrawSharesAsTokens(address,address,uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stakerStrategyShares(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeposits(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stakerStrategyListLength(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addStrategiesToDepositWhitelist(address[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeStrategiesFromDepositWhitelist(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setThirdPartyTransfersForbidden(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegation()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"slasher()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eigenPodManager()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"strategyWhitelister()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"strategyIsWhitelistedForDeposit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setStrategyWhitelister(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"thirdPartyTransfersForbidden(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"domainSeparator()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Merkle\": {},\n        \"IMevCommitAVS\": {\n            \"registerOperator((bytes,bytes32,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestOperatorDeregistration(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterOperator(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"registerValidatorsByPodOwners(bytes[][],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestValidatorsDeregistration(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterValidators(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"registerLSTRestaker(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestLSTRestakerDeregistration()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterLSTRestaker()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"freeze(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unfreeze(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pause()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unpause()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setAVSDirectory(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setStrategyManager(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setDelegationManager(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEigenPodManager(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setRestakeableStrategies(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setFreezeOracle(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUnfreezeFee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUnfreezeReceiver(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUnfreezePeriodBlocks(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setOperatorDeregPeriodBlocks(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setValidatorDeregPeriodBlocks(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setLstRestakerDeregPeriodBlocks(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updateMetadataURI(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isValidatorOptedIn(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getOperatorRegInfo(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getValidatorRegInfo(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLSTRestakerRegInfo(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"avsDirectory()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"validatorRegistrations(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IMevCommitMiddleware\": {\n            \"registerOperators(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestOperatorDeregistrations(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterOperators(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blacklistOperators(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unblacklistOperators(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"registerVaults(address[],uint160[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updateSlashAmounts(address[],uint160[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestVaultDeregistrations(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterVaults(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"registerValidators(bytes[][],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestValDeregistrations(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterValidators(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"slashValidators(bytes[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pause()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unpause()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNetworkRegistry(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setOperatorRegistry(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setVaultFactory(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNetwork(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setSlashPeriodSeconds(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setSlashOracle(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isValidatorOptedIn(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isValidatorSlashable(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"potentialSlashableValidators(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getPositionInValset(bytes,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNumSlashableVals(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pubkeyAtPositionInValset(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"valsetLength(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"validatorRecords(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IRewardManager\": {\n            \"payProposer(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"enableAutoClaim(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"disableAutoClaim()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"overrideReceiver(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeOverrideAddress(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"claimRewards()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"claimOrphanedRewards(bytes[],address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFromAutoClaimBlacklist(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setVanillaRegistry(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setMevCommitAVS(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setMevCommitMiddleware(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setAutoClaimGasLimit(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IVanillaRegistry\": {\n            \"initialize(uint256,address,address,uint256,uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stake(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegateStake(bytes[],address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addStake(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unstake(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdraw(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"slash(bytes[],bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pause()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unpause()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setMinStake(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setSlashOracle(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setSlashReceiver(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUnstakePeriodBlocks(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isValidatorOptedIn(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStakedValidator(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStakedAmount(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isUnstaking(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlocksTillWithdrawAllowed(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stakedValidators(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IRegistry\": {\n            \"isEntity(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalEntities()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"entity(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Errors\": {},\n        \"BlockHeightOccurrence\": {},\n        \"TimestampOccurrence\": {},\n        \"RewardManager\": {\n            \"proxiableUUID()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"upgradeToAndCall(address,bytes)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"paused()\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\"\n                ]\n            },\n            \"pendingOwner()\": {\n                \"impacts\": [\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\"\n                ]\n            },\n            \"transferOwnership(address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"acceptOwnership()\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"owner()\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"renounceOwnership()\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"constructor()\": {\n                \"impacts\": [\n                    \"constructor()\",\n                    \"initialize(address,address,address,uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor()\",\n                    \"initialize(address,address,address,uint256,address)\"\n                ]\n            },\n            \"()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"initialize(address,address,address,uint256,address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"paused()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"constructor()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"paused()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"constructor()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"pause()\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"paused()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"paused()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"unpause()\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"paused()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"paused()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"payProposer(bytes)\": {\n                \"impacts\": [\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"enableAutoClaim(bool)\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ]\n            },\n            \"disableAutoClaim()\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ]\n            },\n            \"overrideReceiver(address,bool)\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ]\n            },\n            \"removeOverrideAddress(bool)\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ]\n            },\n            \"claimRewards()\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ]\n            },\n            \"claimOrphanedRewards(bytes[],address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"removeFromAutoClaimBlacklist(address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"setVanillaRegistry(address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"setMevCommitAVS(address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"setMevCommitMiddleware(address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"setAutoClaimGasLimit(uint256)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            }\n        },\n        \"RewardManagerStorage\": {},\n        \"Fuzz\": {\n            \"payProposer(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor()\": {\n                \"impacts\": [\n                    \"payProposer(bytes)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Setup\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"MevCommitAVSMock\": {},\n        \"MevCommitMiddlewareMock\": {},\n        \"VanillaRegistryMock\": {},\n        \"BaseProperties\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"PayProposerProperties\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"payProposer(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        }\n    },\n    \"constructors\": {\n        \"ERC1967Proxy\": \"constructor(address,bytes)\",\n        \"RewardManager\": \"constructor()\",\n        \"Fuzz\": \"constructor()\"\n    },\n    \"have_external_calls\": {\n        \"StdAssertions\": [\n            \"failed()\"\n        ],\n        \"Test\": [\n            \"failed()\"\n        ],\n        \"UUPSUpgradeable\": [\n            \"upgradeToAndCall(address,bytes)\"\n        ],\n        \"ERC1967Proxy\": [\n            \"()\",\n            \"constructor(address,bytes)\"\n        ],\n        \"RewardManager\": [\n            \"claimOrphanedRewards(bytes[],address)\",\n            \"upgradeToAndCall(address,bytes)\",\n            \"enableAutoClaim(bool)\",\n            \"payProposer(bytes)\",\n            \"claimRewards()\"\n        ],\n        \"Fuzz\": [\n            \"payProposer(bytes)\",\n            \"failed()\",\n            \"constructor()\"\n        ],\n        \"Setup\": [\n            \"failed()\"\n        ],\n        \"BaseProperties\": [\n            \"failed()\"\n        ],\n        \"PayProposerProperties\": [\n            \"payProposer(bytes)\",\n            \"failed()\"\n        ]\n    },\n    \"use_balance\": {},\n    \"solc_versions\": [\n        \"0.8.26\"\n    ],\n    \"with_fallback\": [\n        \"ERC1967Proxy\",\n        \"RewardManager\",\n        \"Proxy\"\n    ],\n    \"with_receive\": [\n        \"RewardManager\"\n    ]\n}", "markdown": "{\n    \"payable\": {\n        \"IMulticall3\": [\n            \"aggregate((address,bytes)[])\",\n            \"aggregate3((address,bool,bytes)[])\",\n            \"aggregate3Value((address,bool,uint256,bytes)[])\",\n            \"blockAndAggregate((address,bytes)[])\",\n            \"tryAggregate(bool,(address,bytes)[])\",\n            \"tryBlockAndAggregate(bool,(address,bytes)[])\"\n        ],\n        \"UUPSUpgradeable\": [\n            \"upgradeToAndCall(address,bytes)\"\n        ],\n        \"ERC1967Proxy\": [\n            \"()\",\n            \"constructor(address,bytes)\"\n        ],\n        \"Proxy\": [\n            \"()\"\n        ],\n        \"IETHPOSDeposit\": [\n            \"deposit(bytes,bytes,bytes,bytes32)\"\n        ],\n        \"IEigenPod\": [\n            \"stake(bytes,bytes,bytes32)\"\n        ],\n        \"IEigenPodManager\": [\n            \"stake(bytes,bytes,bytes32)\"\n        ],\n        \"IMevCommitAVS\": [\n            \"unfreeze(bytes[])\"\n        ],\n        \"IRewardManager\": [\n            \"payProposer(bytes)\"\n        ],\n        \"IVanillaRegistry\": [\n            \"stake(bytes[])\",\n            \"delegateStake(bytes[],address)\",\n            \"addStake(bytes[])\"\n        ],\n        \"RewardManager\": [\n            \"upgradeToAndCall(address,bytes)\",\n            \"()\",\n            \"()\",\n            \"payProposer(bytes)\"\n        ]\n    },\n    \"timestamp\": {},\n    \"block_number\": {},\n    \"msg_sender\": {\n        \"Ownable2StepUpgradeable\": [\n            \"renounceOwnership()\",\n            \"transferOwnership(address)\",\n            \"acceptOwnership()\"\n        ],\n        \"OwnableUpgradeable\": [\n            \"renounceOwnership()\",\n            \"transferOwnership(address)\"\n        ],\n        \"RewardManager\": [\n            \"upgradeToAndCall(address,bytes)\",\n            \"transferOwnership(address)\",\n            \"acceptOwnership()\",\n            \"renounceOwnership()\",\n            \"pause()\",\n            \"unpause()\",\n            \"payProposer(bytes)\",\n            \"enableAutoClaim(bool)\",\n            \"disableAutoClaim()\",\n            \"overrideReceiver(address,bool)\",\n            \"removeOverrideAddress(bool)\",\n            \"claimRewards()\",\n            \"claimOrphanedRewards(bytes[],address)\",\n            \"removeFromAutoClaimBlacklist(address)\",\n            \"setVanillaRegistry(address)\",\n            \"setMevCommitAVS(address)\",\n            \"setMevCommitMiddleware(address)\",\n            \"setAutoClaimGasLimit(uint256)\"\n        ]\n    },\n    \"msg_gas\": {},\n    \"assert\": {\n        \"Fuzz\": {\n            \"payProposer(bytes)\": [\n                {\n                    \"start\": 314,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/fuzzing/properties/PayProposer.sol\",\n                    \"filename_absolute\": \"/Users/pyk/github/pyk/primev-fuzz/test/fuzzing/properties/PayProposer.sol\",\n                    \"filename_short\": \"test/fuzzing/properties/PayProposer.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        12\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ]\n        },\n        \"PayProposerProperties\": {\n            \"payProposer(bytes)\": [\n                {\n                    \"start\": 314,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/fuzzing/properties/PayProposer.sol\",\n                    \"filename_absolute\": \"/Users/pyk/github/pyk/primev-fuzz/test/fuzzing/properties/PayProposer.sol\",\n                    \"filename_short\": \"test/fuzzing/properties/PayProposer.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        12\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ]\n        }\n    },\n    \"constant_functions\": {\n        \"StdAssertions\": [\n            \"failed()\"\n        ],\n        \"stdError\": [\n            \"assertionError()\",\n            \"arithmeticError()\",\n            \"divisionError()\",\n            \"enumConversionError()\",\n            \"encodeStorageError()\",\n            \"popError()\",\n            \"indexOOBError()\",\n            \"memOverflowError()\",\n            \"zeroVarError()\"\n        ],\n        \"StdInvariant\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\"\n        ],\n        \"Test\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ],\n        \"VmSafe\": [\n            \"deriveKey(string,uint32)\",\n            \"deriveKey(string,string,uint32)\",\n            \"deriveKey(string,uint32,string)\",\n            \"deriveKey(string,string,uint32,string)\",\n            \"publicKeyP256(uint256)\",\n            \"signCompact(uint256,bytes32)\",\n            \"signCompact(bytes32)\",\n            \"signCompact(address,bytes32)\",\n            \"signP256(uint256,bytes32)\",\n            \"sign(uint256,bytes32)\",\n            \"sign(bytes32)\",\n            \"sign(address,bytes32)\",\n            \"envAddress(string)\",\n            \"envAddress(string,string)\",\n            \"envBool(string)\",\n            \"envBool(string,string)\",\n            \"envBytes32(string)\",\n            \"envBytes32(string,string)\",\n            \"envBytes(string)\",\n            \"envBytes(string,string)\",\n            \"envExists(string)\",\n            \"envInt(string)\",\n            \"envInt(string,string)\",\n            \"envOr(string,bool)\",\n            \"envOr(string,uint256)\",\n            \"envOr(string,string,address[])\",\n            \"envOr(string,string,bytes32[])\",\n            \"envOr(string,string,string[])\",\n            \"envOr(string,string,bytes[])\",\n            \"envOr(string,int256)\",\n            \"envOr(string,address)\",\n            \"envOr(string,bytes32)\",\n            \"envOr(string,string)\",\n            \"envOr(string,bytes)\",\n            \"envOr(string,string,bool[])\",\n            \"envOr(string,string,uint256[])\",\n            \"envOr(string,string,int256[])\",\n            \"envString(string)\",\n            \"envString(string,string)\",\n            \"envUint(string)\",\n            \"envUint(string,string)\",\n            \"isContext(uint8)\",\n            \"addr(uint256)\",\n            \"getBlobBaseFee()\",\n            \"getBlockNumber()\",\n            \"getBlockTimestamp()\",\n            \"getNonce(address)\",\n            \"getStateDiff()\",\n            \"getStateDiffJson()\",\n            \"lastCallGas()\",\n            \"load(address,bytes32)\",\n            \"exists(string)\",\n            \"fsMetadata(string)\",\n            \"getArtifactPathByCode(bytes)\",\n            \"getArtifactPathByDeployedCode(bytes)\",\n            \"getBroadcast(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64)\",\n            \"getCode(string)\",\n            \"getDeployedCode(string)\",\n            \"getDeployment(string)\",\n            \"getDeployment(string,uint64)\",\n            \"getDeployments(string,uint64)\",\n            \"isDir(string)\",\n            \"isFile(string)\",\n            \"projectRoot()\",\n            \"readDir(string)\",\n            \"readDir(string,uint64)\",\n            \"readDir(string,uint64,bool)\",\n            \"readFile(string)\",\n            \"readFileBinary(string)\",\n            \"readLine(string)\",\n            \"readLink(string)\",\n            \"unixTime()\",\n            \"keyExistsJson(string,string)\",\n            \"parseJsonAddress(string,string)\",\n            \"parseJsonAddressArray(string,string)\",\n            \"parseJsonBool(string,string)\",\n            \"parseJsonBoolArray(string,string)\",\n            \"parseJsonBytes(string,string)\",\n            \"parseJsonBytes32(string,string)\",\n            \"parseJsonBytes32Array(string,string)\",\n            \"parseJsonBytesArray(string,string)\",\n            \"parseJsonInt(string,string)\",\n            \"parseJsonIntArray(string,string)\",\n            \"parseJsonKeys(string,string)\",\n            \"parseJsonString(string,string)\",\n            \"parseJsonStringArray(string,string)\",\n            \"parseJsonTypeArray(string,string,string)\",\n            \"parseJsonType(string,string)\",\n            \"parseJsonType(string,string,string)\",\n            \"parseJsonUint(string,string)\",\n            \"parseJsonUintArray(string,string)\",\n            \"parseJson(string)\",\n            \"parseJson(string,string)\",\n            \"serializeJsonType(string,bytes)\",\n            \"keyExists(string,string)\",\n            \"indexOf(string,string)\",\n            \"parseAddress(string)\",\n            \"parseBool(string)\",\n            \"parseBytes(string)\",\n            \"parseBytes32(string)\",\n            \"parseInt(string)\",\n            \"parseUint(string)\",\n            \"replace(string,string,string)\",\n            \"split(string,string)\",\n            \"toLowercase(string)\",\n            \"toString(address)\",\n            \"toString(bytes)\",\n            \"toString(bytes32)\",\n            \"toString(bool)\",\n            \"toString(uint256)\",\n            \"toString(int256)\",\n            \"toUppercase(string)\",\n            \"trim(string)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(int256,int256,uint256)\",\n            \"assertApproxEqAbs(int256,int256,uint256,string)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqRel(uint256,uint256,uint256)\",\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\",\n            \"assertApproxEqRel(int256,int256,uint256)\",\n            \"assertApproxEqRel(int256,int256,uint256,string)\",\n            \"assertEqDecimal(uint256,uint256,uint256)\",\n            \"assertEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertEqDecimal(int256,int256,uint256)\",\n            \"assertEqDecimal(int256,int256,uint256,string)\",\n            \"assertEq(bool,bool)\",\n            \"assertEq(bool,bool,string)\",\n            \"assertEq(string,string)\",\n            \"assertEq(string,string,string)\",\n            \"assertEq(bytes,bytes)\",\n            \"assertEq(bytes,bytes,string)\",\n            \"assertEq(bool[],bool[])\",\n            \"assertEq(bool[],bool[],string)\",\n            \"assertEq(uint256[],uint256[])\",\n            \"assertEq(uint256[],uint256[],string)\",\n            \"assertEq(int256[],int256[])\",\n            \"assertEq(int256[],int256[],string)\",\n            \"assertEq(uint256,uint256)\",\n            \"assertEq(address[],address[])\",\n            \"assertEq(address[],address[],string)\",\n            \"assertEq(bytes32[],bytes32[])\",\n            \"assertEq(bytes32[],bytes32[],string)\",\n            \"assertEq(string[],string[])\",\n            \"assertEq(string[],string[],string)\",\n            \"assertEq(bytes[],bytes[])\",\n            \"assertEq(bytes[],bytes[],string)\",\n            \"assertEq(uint256,uint256,string)\",\n            \"assertEq(int256,int256)\",\n            \"assertEq(int256,int256,string)\",\n            \"assertEq(address,address)\",\n            \"assertEq(address,address,string)\",\n            \"assertEq(bytes32,bytes32)\",\n            \"assertEq(bytes32,bytes32,string)\",\n            \"assertFalse(bool)\",\n            \"assertFalse(bool,string)\",\n            \"assertGeDecimal(uint256,uint256,uint256)\",\n            \"assertGeDecimal(uint256,uint256,uint256,string)\",\n            \"assertGeDecimal(int256,int256,uint256)\",\n            \"assertGeDecimal(int256,int256,uint256,string)\",\n            \"assertGe(uint256,uint256)\",\n            \"assertGe(uint256,uint256,string)\",\n            \"assertGe(int256,int256)\",\n            \"assertGe(int256,int256,string)\",\n            \"assertGtDecimal(uint256,uint256,uint256)\",\n            \"assertGtDecimal(uint256,uint256,uint256,string)\",\n            \"assertGtDecimal(int256,int256,uint256)\",\n            \"assertGtDecimal(int256,int256,uint256,string)\",\n            \"assertGt(uint256,uint256)\",\n            \"assertGt(uint256,uint256,string)\",\n            \"assertGt(int256,int256)\",\n            \"assertGt(int256,int256,string)\",\n            \"assertLeDecimal(uint256,uint256,uint256)\",\n            \"assertLeDecimal(uint256,uint256,uint256,string)\",\n            \"assertLeDecimal(int256,int256,uint256)\",\n            \"assertLeDecimal(int256,int256,uint256,string)\",\n            \"assertLe(uint256,uint256)\",\n            \"assertLe(uint256,uint256,string)\",\n            \"assertLe(int256,int256)\",\n            \"assertLe(int256,int256,string)\",\n            \"assertLtDecimal(uint256,uint256,uint256)\",\n            \"assertLtDecimal(uint256,uint256,uint256,string)\",\n            \"assertLtDecimal(int256,int256,uint256)\",\n            \"assertLtDecimal(int256,int256,uint256,string)\",\n            \"assertLt(uint256,uint256)\",\n            \"assertLt(uint256,uint256,string)\",\n            \"assertLt(int256,int256)\",\n            \"assertLt(int256,int256,string)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertNotEqDecimal(int256,int256,uint256)\",\n            \"assertNotEqDecimal(int256,int256,uint256,string)\",\n            \"assertNotEq(bool,bool)\",\n            \"assertNotEq(bool,bool,string)\",\n            \"assertNotEq(string,string)\",\n            \"assertNotEq(string,string,string)\",\n            \"assertNotEq(bytes,bytes)\",\n            \"assertNotEq(bytes,bytes,string)\",\n            \"assertNotEq(bool[],bool[])\",\n            \"assertNotEq(bool[],bool[],string)\",\n            \"assertNotEq(uint256[],uint256[])\",\n            \"assertNotEq(uint256[],uint256[],string)\",\n            \"assertNotEq(int256[],int256[])\",\n            \"assertNotEq(int256[],int256[],string)\",\n            \"assertNotEq(uint256,uint256)\",\n            \"assertNotEq(address[],address[])\",\n            \"assertNotEq(address[],address[],string)\",\n            \"assertNotEq(bytes32[],bytes32[])\",\n            \"assertNotEq(bytes32[],bytes32[],string)\",\n            \"assertNotEq(string[],string[])\",\n            \"assertNotEq(string[],string[],string)\",\n            \"assertNotEq(bytes[],bytes[])\",\n            \"assertNotEq(bytes[],bytes[],string)\",\n            \"assertNotEq(uint256,uint256,string)\",\n            \"assertNotEq(int256,int256)\",\n            \"assertNotEq(int256,int256,string)\",\n            \"assertNotEq(address,address)\",\n            \"assertNotEq(address,address,string)\",\n            \"assertNotEq(bytes32,bytes32)\",\n            \"assertNotEq(bytes32,bytes32,string)\",\n            \"assertTrue(bool)\",\n            \"assertTrue(bool,string)\",\n            \"assume(bool)\",\n            \"assumeNoRevert()\",\n            \"assumeNoRevert((address,bool,bytes))\",\n            \"assumeNoRevert((address,bool,bytes)[])\",\n            \"breakpoint(string)\",\n            \"breakpoint(string,bool)\",\n            \"foundryVersionAtLeast(string)\",\n            \"foundryVersionCmp(string)\",\n            \"getChain(string)\",\n            \"getChain(uint256)\",\n            \"getFoundryVersion()\",\n            \"rpcUrl(string)\",\n            \"rpcUrlStructs()\",\n            \"rpcUrls()\",\n            \"keyExistsToml(string,string)\",\n            \"parseTomlAddress(string,string)\",\n            \"parseTomlAddressArray(string,string)\",\n            \"parseTomlBool(string,string)\",\n            \"parseTomlBoolArray(string,string)\",\n            \"parseTomlBytes(string,string)\",\n            \"parseTomlBytes32(string,string)\",\n            \"parseTomlBytes32Array(string,string)\",\n            \"parseTomlBytesArray(string,string)\",\n            \"parseTomlInt(string,string)\",\n            \"parseTomlIntArray(string,string)\",\n            \"parseTomlKeys(string,string)\",\n            \"parseTomlString(string,string)\",\n            \"parseTomlStringArray(string,string)\",\n            \"parseTomlTypeArray(string,string,string)\",\n            \"parseTomlType(string,string)\",\n            \"parseTomlType(string,string,string)\",\n            \"parseTomlUint(string,string)\",\n            \"parseTomlUintArray(string,string)\",\n            \"parseToml(string)\",\n            \"parseToml(string,string)\",\n            \"computeCreate2Address(bytes32,bytes32,address)\",\n            \"computeCreate2Address(bytes32,bytes32)\",\n            \"computeCreateAddress(address,uint256)\",\n            \"ensNamehash(string)\",\n            \"getLabel(address)\",\n            \"pauseTracing()\",\n            \"randomBool()\",\n            \"randomBytes(uint256)\",\n            \"randomBytes4()\",\n            \"randomBytes8()\",\n            \"randomInt()\",\n            \"randomInt(uint256)\",\n            \"randomUint(uint256)\",\n            \"resumeTracing()\",\n            \"toBase64URL(bytes)\",\n            \"toBase64URL(string)\",\n            \"toBase64(bytes)\",\n            \"toBase64(string)\"\n        ],\n        \"Vm\": [\n            \"deriveKey(string,uint32)\",\n            \"deriveKey(string,string,uint32)\",\n            \"deriveKey(string,uint32,string)\",\n            \"deriveKey(string,string,uint32,string)\",\n            \"publicKeyP256(uint256)\",\n            \"signCompact(uint256,bytes32)\",\n            \"signCompact(bytes32)\",\n            \"signCompact(address,bytes32)\",\n            \"signP256(uint256,bytes32)\",\n            \"sign(uint256,bytes32)\",\n            \"sign(bytes32)\",\n            \"sign(address,bytes32)\",\n            \"envAddress(string)\",\n            \"envAddress(string,string)\",\n            \"envBool(string)\",\n            \"envBool(string,string)\",\n            \"envBytes32(string)\",\n            \"envBytes32(string,string)\",\n            \"envBytes(string)\",\n            \"envBytes(string,string)\",\n            \"envExists(string)\",\n            \"envInt(string)\",\n            \"envInt(string,string)\",\n            \"envOr(string,bool)\",\n            \"envOr(string,uint256)\",\n            \"envOr(string,string,address[])\",\n            \"envOr(string,string,bytes32[])\",\n            \"envOr(string,string,string[])\",\n            \"envOr(string,string,bytes[])\",\n            \"envOr(string,int256)\",\n            \"envOr(string,address)\",\n            \"envOr(string,bytes32)\",\n            \"envOr(string,string)\",\n            \"envOr(string,bytes)\",\n            \"envOr(string,string,bool[])\",\n            \"envOr(string,string,uint256[])\",\n            \"envOr(string,string,int256[])\",\n            \"envString(string)\",\n            \"envString(string,string)\",\n            \"envUint(string)\",\n            \"envUint(string,string)\",\n            \"isContext(uint8)\",\n            \"addr(uint256)\",\n            \"getBlobBaseFee()\",\n            \"getBlockNumber()\",\n            \"getBlockTimestamp()\",\n            \"getNonce(address)\",\n            \"getStateDiff()\",\n            \"getStateDiffJson()\",\n            \"lastCallGas()\",\n            \"load(address,bytes32)\",\n            \"exists(string)\",\n            \"fsMetadata(string)\",\n            \"getArtifactPathByCode(bytes)\",\n            \"getArtifactPathByDeployedCode(bytes)\",\n            \"getBroadcast(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64)\",\n            \"getCode(string)\",\n            \"getDeployedCode(string)\",\n            \"getDeployment(string)\",\n            \"getDeployment(string,uint64)\",\n            \"getDeployments(string,uint64)\",\n            \"isDir(string)\",\n            \"isFile(string)\",\n            \"projectRoot()\",\n            \"readDir(string)\",\n            \"readDir(string,uint64)\",\n            \"readDir(string,uint64,bool)\",\n            \"readFile(string)\",\n            \"readFileBinary(string)\",\n            \"readLine(string)\",\n            \"readLink(string)\",\n            \"unixTime()\",\n            \"keyExistsJson(string,string)\",\n            \"parseJsonAddress(string,string)\",\n            \"parseJsonAddressArray(string,string)\",\n            \"parseJsonBool(string,string)\",\n            \"parseJsonBoolArray(string,string)\",\n            \"parseJsonBytes(string,string)\",\n            \"parseJsonBytes32(string,string)\",\n            \"parseJsonBytes32Array(string,string)\",\n            \"parseJsonBytesArray(string,string)\",\n            \"parseJsonInt(string,string)\",\n            \"parseJsonIntArray(string,string)\",\n            \"parseJsonKeys(string,string)\",\n            \"parseJsonString(string,string)\",\n            \"parseJsonStringArray(string,string)\",\n            \"parseJsonTypeArray(string,string,string)\",\n            \"parseJsonType(string,string)\",\n            \"parseJsonType(string,string,string)\",\n            \"parseJsonUint(string,string)\",\n            \"parseJsonUintArray(string,string)\",\n            \"parseJson(string)\",\n            \"parseJson(string,string)\",\n            \"serializeJsonType(string,bytes)\",\n            \"keyExists(string,string)\",\n            \"indexOf(string,string)\",\n            \"parseAddress(string)\",\n            \"parseBool(string)\",\n            \"parseBytes(string)\",\n            \"parseBytes32(string)\",\n            \"parseInt(string)\",\n            \"parseUint(string)\",\n            \"replace(string,string,string)\",\n            \"split(string,string)\",\n            \"toLowercase(string)\",\n            \"toString(address)\",\n            \"toString(bytes)\",\n            \"toString(bytes32)\",\n            \"toString(bool)\",\n            \"toString(uint256)\",\n            \"toString(int256)\",\n            \"toUppercase(string)\",\n            \"trim(string)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(int256,int256,uint256)\",\n            \"assertApproxEqAbs(int256,int256,uint256,string)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqRel(uint256,uint256,uint256)\",\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\",\n            \"assertApproxEqRel(int256,int256,uint256)\",\n            \"assertApproxEqRel(int256,int256,uint256,string)\",\n            \"assertEqDecimal(uint256,uint256,uint256)\",\n            \"assertEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertEqDecimal(int256,int256,uint256)\",\n            \"assertEqDecimal(int256,int256,uint256,string)\",\n            \"assertEq(bool,bool)\",\n            \"assertEq(bool,bool,string)\",\n            \"assertEq(string,string)\",\n            \"assertEq(string,string,string)\",\n            \"assertEq(bytes,bytes)\",\n            \"assertEq(bytes,bytes,string)\",\n            \"assertEq(bool[],bool[])\",\n            \"assertEq(bool[],bool[],string)\",\n            \"assertEq(uint256[],uint256[])\",\n            \"assertEq(uint256[],uint256[],string)\",\n            \"assertEq(int256[],int256[])\",\n            \"assertEq(int256[],int256[],string)\",\n            \"assertEq(uint256,uint256)\",\n            \"assertEq(address[],address[])\",\n            \"assertEq(address[],address[],string)\",\n            \"assertEq(bytes32[],bytes32[])\",\n            \"assertEq(bytes32[],bytes32[],string)\",\n            \"assertEq(string[],string[])\",\n            \"assertEq(string[],string[],string)\",\n            \"assertEq(bytes[],bytes[])\",\n            \"assertEq(bytes[],bytes[],string)\",\n            \"assertEq(uint256,uint256,string)\",\n            \"assertEq(int256,int256)\",\n            \"assertEq(int256,int256,string)\",\n            \"assertEq(address,address)\",\n            \"assertEq(address,address,string)\",\n            \"assertEq(bytes32,bytes32)\",\n            \"assertEq(bytes32,bytes32,string)\",\n            \"assertFalse(bool)\",\n            \"assertFalse(bool,string)\",\n            \"assertGeDecimal(uint256,uint256,uint256)\",\n            \"assertGeDecimal(uint256,uint256,uint256,string)\",\n            \"assertGeDecimal(int256,int256,uint256)\",\n            \"assertGeDecimal(int256,int256,uint256,string)\",\n            \"assertGe(uint256,uint256)\",\n            \"assertGe(uint256,uint256,string)\",\n            \"assertGe(int256,int256)\",\n            \"assertGe(int256,int256,string)\",\n            \"assertGtDecimal(uint256,uint256,uint256)\",\n            \"assertGtDecimal(uint256,uint256,uint256,string)\",\n            \"assertGtDecimal(int256,int256,uint256)\",\n            \"assertGtDecimal(int256,int256,uint256,string)\",\n            \"assertGt(uint256,uint256)\",\n            \"assertGt(uint256,uint256,string)\",\n            \"assertGt(int256,int256)\",\n            \"assertGt(int256,int256,string)\",\n            \"assertLeDecimal(uint256,uint256,uint256)\",\n            \"assertLeDecimal(uint256,uint256,uint256,string)\",\n            \"assertLeDecimal(int256,int256,uint256)\",\n            \"assertLeDecimal(int256,int256,uint256,string)\",\n            \"assertLe(uint256,uint256)\",\n            \"assertLe(uint256,uint256,string)\",\n            \"assertLe(int256,int256)\",\n            \"assertLe(int256,int256,string)\",\n            \"assertLtDecimal(uint256,uint256,uint256)\",\n            \"assertLtDecimal(uint256,uint256,uint256,string)\",\n            \"assertLtDecimal(int256,int256,uint256)\",\n            \"assertLtDecimal(int256,int256,uint256,string)\",\n            \"assertLt(uint256,uint256)\",\n            \"assertLt(uint256,uint256,string)\",\n            \"assertLt(int256,int256)\",\n            \"assertLt(int256,int256,string)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertNotEqDecimal(int256,int256,uint256)\",\n            \"assertNotEqDecimal(int256,int256,uint256,string)\",\n            \"assertNotEq(bool,bool)\",\n            \"assertNotEq(bool,bool,string)\",\n            \"assertNotEq(string,string)\",\n            \"assertNotEq(string,string,string)\",\n            \"assertNotEq(bytes,bytes)\",\n            \"assertNotEq(bytes,bytes,string)\",\n            \"assertNotEq(bool[],bool[])\",\n            \"assertNotEq(bool[],bool[],string)\",\n            \"assertNotEq(uint256[],uint256[])\",\n            \"assertNotEq(uint256[],uint256[],string)\",\n            \"assertNotEq(int256[],int256[])\",\n            \"assertNotEq(int256[],int256[],string)\",\n            \"assertNotEq(uint256,uint256)\",\n            \"assertNotEq(address[],address[])\",\n            \"assertNotEq(address[],address[],string)\",\n            \"assertNotEq(bytes32[],bytes32[])\",\n            \"assertNotEq(bytes32[],bytes32[],string)\",\n            \"assertNotEq(string[],string[])\",\n            \"assertNotEq(string[],string[],string)\",\n            \"assertNotEq(bytes[],bytes[])\",\n            \"assertNotEq(bytes[],bytes[],string)\",\n            \"assertNotEq(uint256,uint256,string)\",\n            \"assertNotEq(int256,int256)\",\n            \"assertNotEq(int256,int256,string)\",\n            \"assertNotEq(address,address)\",\n            \"assertNotEq(address,address,string)\",\n            \"assertNotEq(bytes32,bytes32)\",\n            \"assertNotEq(bytes32,bytes32,string)\",\n            \"assertTrue(bool)\",\n            \"assertTrue(bool,string)\",\n            \"assume(bool)\",\n            \"assumeNoRevert()\",\n            \"assumeNoRevert((address,bool,bytes))\",\n            \"assumeNoRevert((address,bool,bytes)[])\",\n            \"breakpoint(string)\",\n            \"breakpoint(string,bool)\",\n            \"foundryVersionAtLeast(string)\",\n            \"foundryVersionCmp(string)\",\n            \"getChain(string)\",\n            \"getChain(uint256)\",\n            \"getFoundryVersion()\",\n            \"rpcUrl(string)\",\n            \"rpcUrlStructs()\",\n            \"rpcUrls()\",\n            \"keyExistsToml(string,string)\",\n            \"parseTomlAddress(string,string)\",\n            \"parseTomlAddressArray(string,string)\",\n            \"parseTomlBool(string,string)\",\n            \"parseTomlBoolArray(string,string)\",\n            \"parseTomlBytes(string,string)\",\n            \"parseTomlBytes32(string,string)\",\n            \"parseTomlBytes32Array(string,string)\",\n            \"parseTomlBytesArray(string,string)\",\n            \"parseTomlInt(string,string)\",\n            \"parseTomlIntArray(string,string)\",\n            \"parseTomlKeys(string,string)\",\n            \"parseTomlString(string,string)\",\n            \"parseTomlStringArray(string,string)\",\n            \"parseTomlTypeArray(string,string,string)\",\n            \"parseTomlType(string,string)\",\n            \"parseTomlType(string,string,string)\",\n            \"parseTomlUint(string,string)\",\n            \"parseTomlUintArray(string,string)\",\n            \"parseToml(string)\",\n            \"parseToml(string,string)\",\n            \"computeCreate2Address(bytes32,bytes32,address)\",\n            \"computeCreate2Address(bytes32,bytes32)\",\n            \"computeCreateAddress(address,uint256)\",\n            \"ensNamehash(string)\",\n            \"getLabel(address)\",\n            \"pauseTracing()\",\n            \"randomBool()\",\n            \"randomBytes(uint256)\",\n            \"randomBytes4()\",\n            \"randomBytes8()\",\n            \"randomInt()\",\n            \"randomInt(uint256)\",\n            \"randomUint(uint256)\",\n            \"resumeTracing()\",\n            \"toBase64URL(bytes)\",\n            \"toBase64URL(string)\",\n            \"toBase64(bytes)\",\n            \"toBase64(string)\",\n            \"activeFork()\",\n            \"getBlobhashes()\",\n            \"isPersistent(address)\"\n        ],\n        \"IMulticall3\": [\n            \"getBasefee()\",\n            \"getBlockHash(uint256)\",\n            \"getBlockNumber()\",\n            \"getChainId()\",\n            \"getCurrentBlockCoinbase()\",\n            \"getCurrentBlockDifficulty()\",\n            \"getCurrentBlockGasLimit()\",\n            \"getCurrentBlockTimestamp()\",\n            \"getEthBalance(address)\",\n            \"getLastBlockHash()\"\n        ],\n        \"Ownable2StepUpgradeable\": [\n            \"owner()\",\n            \"pendingOwner()\"\n        ],\n        \"OwnableUpgradeable\": [\n            \"owner()\"\n        ],\n        \"UUPSUpgradeable\": [\n            \"proxiableUUID()\",\n            \"UPGRADE_INTERFACE_VERSION()\"\n        ],\n        \"PausableUpgradeable\": [\n            \"paused()\"\n        ],\n        \"IERC1822Proxiable\": [\n            \"proxiableUUID()\"\n        ],\n        \"IBeacon\": [\n            \"implementation()\"\n        ],\n        \"IERC20\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"IAVSDirectory\": [\n            \"operatorSaltIsSpent(address,bytes32)\",\n            \"calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)\",\n            \"OPERATOR_AVS_REGISTRATION_TYPEHASH()\",\n            \"domainSeparator()\"\n        ],\n        \"IDelegationManager\": [\n            \"delegatedTo(address)\",\n            \"operatorDetails(address)\",\n            \"delegationApprover(address)\",\n            \"stakerOptOutWindowBlocks(address)\",\n            \"getOperatorShares(address,address[])\",\n            \"getWithdrawalDelay(address[])\",\n            \"operatorShares(address,address)\",\n            \"getDelegatableShares(address)\",\n            \"isDelegated(address)\",\n            \"isOperator(address)\",\n            \"stakerNonce(address)\",\n            \"delegationApproverSaltIsSpent(address,bytes32)\",\n            \"minWithdrawalDelayBlocks()\",\n            \"strategyWithdrawalDelayBlocks(address)\",\n            \"beaconChainETHStrategy()\",\n            \"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\",\n            \"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\",\n            \"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\",\n            \"DOMAIN_TYPEHASH()\",\n            \"STAKER_DELEGATION_TYPEHASH()\",\n            \"DELEGATION_APPROVAL_TYPEHASH()\",\n            \"domainSeparator()\",\n            \"cumulativeWithdrawalsQueued(address)\",\n            \"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\"\n        ],\n        \"IETHPOSDeposit\": [\n            \"get_deposit_root()\",\n            \"get_deposit_count()\"\n        ],\n        \"IEigenPod\": [\n            \"proofSubmitter()\",\n            \"withdrawableRestakedExecutionLayerGwei()\",\n            \"eigenPodManager()\",\n            \"podOwner()\",\n            \"validatorPubkeyHashToInfo(bytes32)\",\n            \"validatorPubkeyToInfo(bytes)\",\n            \"validatorStatus(bytes32)\",\n            \"validatorStatus(bytes)\",\n            \"activeValidatorCount()\",\n            \"lastCheckpointTimestamp()\",\n            \"currentCheckpointTimestamp()\",\n            \"currentCheckpoint()\",\n            \"checkpointBalanceExitedGwei(uint64)\",\n            \"getParentBlockRoot(uint64)\"\n        ],\n        \"IEigenPodManager\": [\n            \"pauserRegistry()\",\n            \"paused()\",\n            \"paused(uint8)\",\n            \"ownerToPod(address)\",\n            \"getPod(address)\",\n            \"ethPOS()\",\n            \"eigenPodBeacon()\",\n            \"strategyManager()\",\n            \"slasher()\",\n            \"hasPod(address)\",\n            \"numPods()\",\n            \"podOwnerShares(address)\",\n            \"beaconChainETHStrategy()\"\n        ],\n        \"IPausable\": [\n            \"pauserRegistry()\",\n            \"paused()\",\n            \"paused(uint8)\"\n        ],\n        \"IPauserRegistry\": [\n            \"isPauser(address)\",\n            \"unpauser()\"\n        ],\n        \"ISlasher\": [\n            \"strategyManager()\",\n            \"delegation()\",\n            \"isFrozen(address)\",\n            \"canSlash(address,address)\",\n            \"contractCanSlashOperatorUntilBlock(address,address)\",\n            \"latestUpdateBlock(address,address)\",\n            \"getCorrectValueForInsertAfter(address,uint32)\",\n            \"operatorToMiddlewareTimes(address,uint256)\",\n            \"middlewareTimesLength(address)\",\n            \"getMiddlewareTimesIndexStalestUpdateBlock(address,uint32)\",\n            \"getMiddlewareTimesIndexServeUntilBlock(address,uint32)\",\n            \"operatorWhitelistedContractsLinkedListSize(address)\",\n            \"operatorWhitelistedContractsLinkedListEntry(address,address)\"\n        ],\n        \"IStrategy\": [\n            \"shares(address)\",\n            \"sharesToUnderlyingView(uint256)\",\n            \"underlyingToSharesView(uint256)\",\n            \"userUnderlyingView(address)\",\n            \"underlyingToken()\",\n            \"totalShares()\",\n            \"explanation()\"\n        ],\n        \"IStrategyManager\": [\n            \"stakerStrategyShares(address,address)\",\n            \"getDeposits(address)\",\n            \"stakerStrategyListLength(address)\",\n            \"delegation()\",\n            \"slasher()\",\n            \"eigenPodManager()\",\n            \"strategyWhitelister()\",\n            \"strategyIsWhitelistedForDeposit(address)\",\n            \"thirdPartyTransfersForbidden(address)\",\n            \"domainSeparator()\"\n        ],\n        \"IMevCommitAVS\": [\n            \"isValidatorOptedIn(bytes)\",\n            \"getOperatorRegInfo(address)\",\n            \"getValidatorRegInfo(bytes)\",\n            \"getLSTRestakerRegInfo(address)\",\n            \"avsDirectory()\",\n            \"validatorRegistrations(bytes)\"\n        ],\n        \"IMevCommitMiddleware\": [\n            \"isValidatorOptedIn(bytes)\",\n            \"isValidatorSlashable(bytes)\",\n            \"potentialSlashableValidators(address,address)\",\n            \"getPositionInValset(bytes,address,address)\",\n            \"getNumSlashableVals(address,address)\",\n            \"pubkeyAtPositionInValset(uint256,address,address)\",\n            \"valsetLength(address,address)\",\n            \"validatorRecords(bytes)\"\n        ],\n        \"IVanillaRegistry\": [\n            \"isValidatorOptedIn(bytes)\",\n            \"getStakedValidator(bytes)\",\n            \"getStakedAmount(bytes)\",\n            \"isUnstaking(bytes)\",\n            \"getBlocksTillWithdrawAllowed(bytes)\",\n            \"stakedValidators(bytes)\"\n        ],\n        \"IRegistry\": [\n            \"isEntity(address)\",\n            \"totalEntities()\",\n            \"entity(uint256)\"\n        ],\n        \"RewardManager\": [\n            \"proxiableUUID()\",\n            \"paused()\",\n            \"pendingOwner()\",\n            \"owner()\",\n            \"autoClaimGasLimit()\",\n            \"autoClaim(address)\",\n            \"autoClaimBlacklist(address)\",\n            \"unclaimedRewards(address)\",\n            \"orphanedRewards(bytes)\",\n            \"overrideAddresses(address)\",\n            \"UPGRADE_INTERFACE_VERSION()\"\n        ],\n        \"RewardManagerStorage\": [\n            \"autoClaimGasLimit()\",\n            \"autoClaim(address)\",\n            \"autoClaimBlacklist(address)\",\n            \"unclaimedRewards(address)\",\n            \"orphanedRewards(bytes)\",\n            \"overrideAddresses(address)\"\n        ],\n        \"Fuzz\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ],\n        \"Setup\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ],\n        \"BaseProperties\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ],\n        \"PayProposerProperties\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ]\n    },\n    \"constants_used\": {\n        \"StdAssertions\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ]\n            ]\n        },\n        \"Test\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ]\n            ]\n        },\n        \"Ownable2StepUpgradeable\": {\n            \"owner()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"renounceOwnership()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pendingOwner()\": [\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"transferOwnership(address)\": [\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"acceptOwnership()\": [\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"OwnableUpgradeable\": {\n            \"owner()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"renounceOwnership()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"transferOwnership(address)\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"UUPSUpgradeable\": {\n            \"upgradeToAndCall(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"PausableUpgradeable\": {\n            \"paused()\": [\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ERC1967Proxy\": {\n            \"()\": [\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Proxy\": {\n            \"()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"RewardManager\": {\n            \"upgradeToAndCall(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"paused()\": [\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pendingOwner()\": [\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"transferOwnership(address)\": [\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"acceptOwnership()\": [\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"owner()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"renounceOwnership()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor()\": [\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18446744073709551615\",\n                        \"type\": \"uint64\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"initialize(address,address,address,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16053720875717120191110171845200109550086765943194951757191984851604933389312\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pause()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"unpause()\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"payProposer(bytes)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"48\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"enableAutoClaim(bool)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"disableAutoClaim()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"overrideReceiver(address,bool)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removeOverrideAddress(bool)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimRewards()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"92891662540554778686986514950364265630913525426840345632122912437671245656832\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimOrphanedRewards(bytes[],address)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removeFromAutoClaimBlacklist(address)\": [\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"setVanillaRegistry(address)\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"setMevCommitAVS(address)\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"setMevCommitMiddleware(address)\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"setAutoClaimGasLimit(uint256)\": [\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"65173360639460082030725920392146925864023520599682862633725751242436743107328\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Fuzz\": {\n            \"payProposer(bytes)\": [\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ]\n            ],\n            \"constructor()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1393268644\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"RewardManagerProxy\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"RewardManagerOwner\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"RewardManagerImplementation\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Setup\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ]\n            ]\n        },\n        \"BaseProperties\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ]\n            ]\n        },\n        \"PayProposerProperties\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ]\n            ],\n            \"payProposer(bytes)\": [\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        }\n    },\n    \"constants_used_in_binary\": {\n        \"UUPSUpgradeable\": {\n            \"upgradeToAndCall(address,bytes)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ERC1967Proxy\": {\n            \"()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,bytes)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"Proxy\": {\n            \"()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"RewardManager\": {\n            \"upgradeToAndCall(address,bytes)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"initialize(address,address,address,uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"payProposer(bytes)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"48\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"enableAutoClaim(bool)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"overrideReceiver(address,bool)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"removeOverrideAddress(bool)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimRewards()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimOrphanedRewards(bytes[],address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setAutoClaimGasLimit(uint256)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        }\n    },\n    \"functions_relations\": {\n        \"CommonBase\": {},\n        \"TestBase\": {},\n        \"ScriptBase\": {},\n        \"StdAssertions\": {\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"StdChains\": {},\n        \"StdCheatsSafe\": {},\n        \"StdCheats\": {},\n        \"StdConstants\": {},\n        \"stdError\": {},\n        \"StdInvariant\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"stdJson\": {},\n        \"stdMath\": {},\n        \"stdStorageSafe\": {},\n        \"stdStorage\": {},\n        \"StdStyle\": {},\n        \"stdToml\": {},\n        \"StdUtils\": {},\n        \"Test\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"VmSafe\": {\n            \"createWallet(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"publicKeyP256(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKey(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signP256(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envExists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isContext(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEnv(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accesses(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eth_getLogs(uint256,uint256,address,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobBaseFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingKeyAndParentOf(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingLength(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingSlotAt(address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce((address,uint256,uint256,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRecordedLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiffJson()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCallGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"record()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startStateDiffRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"closeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"exists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fsMetadata(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByDeployedCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcast(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployedCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployments(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"projectRoot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prompt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecret(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecretUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFileBinary(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLine(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLink(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryFfi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unixTime()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFileBinary(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeLine(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUintToHex(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExists(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachBlob(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcastRawTransaction(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWallets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contains(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"indexOf(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"replace(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"split(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toLowercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toUppercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"trim(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assume(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionAtLeast(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionCmp(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getFoundryVersion()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrl(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrlStructs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sleep(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreateAddress(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyStorage(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ensNamehash(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLabel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"label(address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBool()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes4()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes8()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"shuffle(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sort(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Vm\": {\n            \"createWallet(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"publicKeyP256(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKey(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signP256(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envExists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isContext(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEnv(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accesses(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eth_getLogs(uint256,uint256,address,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobBaseFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingKeyAndParentOf(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingLength(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingSlotAt(address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce((address,uint256,uint256,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRecordedLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiffJson()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCallGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"record()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startStateDiffRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"closeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"exists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fsMetadata(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByDeployedCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcast(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployedCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployments(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"projectRoot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prompt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecret(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecretUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFileBinary(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLine(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLink(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryFfi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unixTime()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFileBinary(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeLine(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUintToHex(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExists(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachBlob(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcastRawTransaction(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWallets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contains(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"indexOf(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"replace(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"split(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toLowercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toUppercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"trim(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assume(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionAtLeast(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionCmp(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getFoundryVersion()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrl(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrlStructs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sleep(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreateAddress(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyStorage(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ensNamehash(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLabel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"label(address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBool()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes4()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes8()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"shuffle(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sort(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accessList((address,bytes32[])[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"activeFork()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowCheatcodes(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blobBaseFee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blobhashes(bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"chainId(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"clearMockedCalls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cloneAccount(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"coinbase(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cool(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"coolSlot(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deal(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteStateSnapshot(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteStateSnapshots()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"difficulty(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"dumpState(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"etch(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobhashes()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isPersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"loadAllocs(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,uint256,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,uint256,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCalls(address,bytes,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCalls(address,uint256,bytes,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockFunction(address,address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"noAccessList()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readCallers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToState(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToStateAndDelete(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokePersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokePersistent(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"roll(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"selectFork(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setBlockhash(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonce(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonceUnsafe(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotGasLastCall(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotGasLastCall(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotState()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotValue(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotValue(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startSnapshotGas(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startSnapshotGas(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopPrank()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"store(address,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"txGasPrice(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"warmSlot(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"warp(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteSnapshot(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteSnapshots()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToAndDelete(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertTo(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCallMinGas(address,uint256,uint64,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCallMinGas(address,uint256,uint64,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,uint64,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,uint64,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCreate(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCreate2(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(bool,bool,bool,bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectPartialRevert(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectPartialRevert(bytes4,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectSafeMemory(uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectSafeMemoryCall(uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"skip(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"skip(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopExpectSafeMemory()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"interceptInitcode()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"console\": {},\n        \"IMulticall3\": {\n            \"aggregate((address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregate3((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregate3Value((address,bool,uint256,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blockAndAggregate((address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBasefee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockHash(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChainId()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockCoinbase()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockDifficulty()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockGasLimit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getEthBalance(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLastBlockHash()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryAggregate(bool,(address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryBlockAndAggregate(bool,(address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"safeconsole\": {},\n        \"Ownable2StepUpgradeable\": {\n            \"owner()\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ]\n            },\n            \"renounceOwnership()\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ]\n            },\n            \"pendingOwner()\": {\n                \"impacts\": [\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ],\n                \"is_impacted_by\": [\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ]\n            },\n            \"transferOwnership(address)\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ]\n            },\n            \"acceptOwnership()\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\"\n                ]\n            }\n        },\n        \"OwnableUpgradeable\": {\n            \"owner()\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\"\n                ]\n            },\n            \"renounceOwnership()\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\"\n                ]\n            },\n            \"transferOwnership(address)\": {\n                \"impacts\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"transferOwnership(address)\"\n                ]\n            }\n        },\n        \"Initializable\": {},\n        \"UUPSUpgradeable\": {\n            \"proxiableUUID()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"upgradeToAndCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ContextUpgradeable\": {},\n        \"PausableUpgradeable\": {\n            \"paused()\": {\n                \"impacts\": [\n                    \"paused()\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\"\n                ]\n            }\n        },\n        \"ReentrancyGuardUpgradeable\": {},\n        \"IERC1822Proxiable\": {\n            \"proxiableUUID()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ERC1967Proxy\": {\n            \"()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ERC1967Utils\": {},\n        \"Proxy\": {\n            \"()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IBeacon\": {\n            \"implementation()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC20\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Address\": {},\n        \"StorageSlot\": {},\n        \"Math\": {},\n        \"Checkpoints\": {},\n        \"BeaconChainProofs\": {},\n        \"Endian\": {},\n        \"IAVSDirectory\": {\n            \"registerOperatorToAVS(address,(bytes,bytes32,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterOperatorFromAVS(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updateAVSMetadataURI(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"operatorSaltIsSpent(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"OPERATOR_AVS_REGISTRATION_TYPEHASH()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cancelSalt(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"domainSeparator()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IDelegationManager\": {\n            \"registerAsOperator((address,address,uint32),string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"modifyOperatorDetails((address,address,uint32))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updateOperatorMetadataURI(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegateTo(address,(bytes,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"undelegate(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"queueWithdrawals((address[],uint256[],address)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"increaseDelegatedShares(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decreaseDelegatedShares(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setMinWithdrawalDelayBlocks(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setStrategyWithdrawalDelayBlocks(address[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegatedTo(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"operatorDetails(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegationApprover(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stakerOptOutWindowBlocks(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getOperatorShares(address,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWithdrawalDelay(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"operatorShares(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDelegatableShares(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDelegated(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isOperator(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stakerNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegationApproverSaltIsSpent(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"minWithdrawalDelayBlocks()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"strategyWithdrawalDelayBlocks(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"beaconChainETHStrategy()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"DOMAIN_TYPEHASH()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"STAKER_DELEGATION_TYPEHASH()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"DELEGATION_APPROVAL_TYPEHASH()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"domainSeparator()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cumulativeWithdrawalsQueued(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IETHPOSDeposit\": {\n            \"deposit(bytes,bytes,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"get_deposit_root()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"get_deposit_count()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IEigenPod\": {\n            \"initialize(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stake(bytes,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdrawRestakedBeaconChainETH(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startCheckpoint(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"verifyCheckpointProofs((bytes32,bytes),(bytes32,bytes32,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"verifyWithdrawalCredentials(uint64,(bytes32,bytes),uint40[],bytes[],bytes32[][])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"verifyStaleBalance(uint64,(bytes32,bytes),(bytes32[],bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recoverTokens(address[],uint256[],address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setProofSubmitter(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"proofSubmitter()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdrawableRestakedExecutionLayerGwei()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eigenPodManager()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"podOwner()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"validatorPubkeyHashToInfo(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"validatorPubkeyToInfo(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"validatorStatus(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"validatorStatus(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"activeValidatorCount()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCheckpointTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"currentCheckpointTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"currentCheckpoint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"checkpointBalanceExitedGwei(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getParentBlockRoot(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IEigenPodManager\": {\n            \"pauserRegistry()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pause(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseAll()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unpause(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"paused()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"paused(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setPauserRegistry(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createPod()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stake(bytes,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordBeaconChainETHBalanceUpdate(address,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ownerToPod(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getPod(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ethPOS()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eigenPodBeacon()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"strategyManager()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"slasher()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasPod(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"numPods()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"podOwnerShares(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"beaconChainETHStrategy()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeShares(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addShares(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdrawSharesAsTokens(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IPausable\": {\n            \"pauserRegistry()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pause(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseAll()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unpause(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"paused()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"paused(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setPauserRegistry(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IPauserRegistry\": {\n            \"isPauser(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unpauser()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ISignatureUtils\": {},\n        \"ISlasher\": {\n            \"optIntoSlashing(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"freezeOperator(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetFrozenStatus(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordFirstStakeUpdate(address,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordStakeUpdate(address,uint32,uint32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLastStakeUpdateAndRevokeSlashingAbility(address,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"strategyManager()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegation()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFrozen(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"canSlash(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contractCanSlashOperatorUntilBlock(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"latestUpdateBlock(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCorrectValueForInsertAfter(address,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"canWithdraw(address,uint32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"operatorToMiddlewareTimes(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"middlewareTimesLength(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMiddlewareTimesIndexStalestUpdateBlock(address,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMiddlewareTimesIndexServeUntilBlock(address,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"operatorWhitelistedContractsLinkedListSize(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"operatorWhitelistedContractsLinkedListEntry(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IStrategy\": {\n            \"deposit(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdraw(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sharesToUnderlying(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"underlyingToShares(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"userUnderlying(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"shares(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sharesToUnderlyingView(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"underlyingToSharesView(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"userUnderlyingView(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"underlyingToken()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalShares()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"explanation()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IStrategyManager\": {\n            \"depositIntoStrategy(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeShares(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addShares(address,address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdrawSharesAsTokens(address,address,uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stakerStrategyShares(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeposits(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stakerStrategyListLength(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addStrategiesToDepositWhitelist(address[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeStrategiesFromDepositWhitelist(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setThirdPartyTransfersForbidden(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegation()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"slasher()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eigenPodManager()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"strategyWhitelister()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"strategyIsWhitelistedForDeposit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setStrategyWhitelister(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"thirdPartyTransfersForbidden(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"domainSeparator()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Merkle\": {},\n        \"IMevCommitAVS\": {\n            \"registerOperator((bytes,bytes32,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestOperatorDeregistration(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterOperator(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"registerValidatorsByPodOwners(bytes[][],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestValidatorsDeregistration(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterValidators(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"registerLSTRestaker(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestLSTRestakerDeregistration()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterLSTRestaker()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"freeze(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unfreeze(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pause()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unpause()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setAVSDirectory(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setStrategyManager(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setDelegationManager(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEigenPodManager(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setRestakeableStrategies(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setFreezeOracle(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUnfreezeFee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUnfreezeReceiver(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUnfreezePeriodBlocks(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setOperatorDeregPeriodBlocks(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setValidatorDeregPeriodBlocks(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setLstRestakerDeregPeriodBlocks(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updateMetadataURI(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isValidatorOptedIn(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getOperatorRegInfo(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getValidatorRegInfo(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLSTRestakerRegInfo(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"avsDirectory()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"validatorRegistrations(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IMevCommitMiddleware\": {\n            \"registerOperators(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestOperatorDeregistrations(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterOperators(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blacklistOperators(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unblacklistOperators(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"registerVaults(address[],uint160[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updateSlashAmounts(address[],uint160[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestVaultDeregistrations(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterVaults(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"registerValidators(bytes[][],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestValDeregistrations(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deregisterValidators(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"slashValidators(bytes[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pause()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unpause()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNetworkRegistry(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setOperatorRegistry(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setVaultFactory(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNetwork(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setSlashPeriodSeconds(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setSlashOracle(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isValidatorOptedIn(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isValidatorSlashable(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"potentialSlashableValidators(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getPositionInValset(bytes,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNumSlashableVals(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pubkeyAtPositionInValset(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"valsetLength(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"validatorRecords(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IRewardManager\": {\n            \"payProposer(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"enableAutoClaim(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"disableAutoClaim()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"overrideReceiver(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeOverrideAddress(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"claimRewards()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"claimOrphanedRewards(bytes[],address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFromAutoClaimBlacklist(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setVanillaRegistry(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setMevCommitAVS(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setMevCommitMiddleware(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setAutoClaimGasLimit(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IVanillaRegistry\": {\n            \"initialize(uint256,address,address,uint256,uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stake(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"delegateStake(bytes[],address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addStake(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unstake(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdraw(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"slash(bytes[],bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pause()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unpause()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setMinStake(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setSlashOracle(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setSlashReceiver(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUnstakePeriodBlocks(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isValidatorOptedIn(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStakedValidator(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStakedAmount(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isUnstaking(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlocksTillWithdrawAllowed(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stakedValidators(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IRegistry\": {\n            \"isEntity(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalEntities()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"entity(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Errors\": {},\n        \"BlockHeightOccurrence\": {},\n        \"TimestampOccurrence\": {},\n        \"RewardManager\": {\n            \"proxiableUUID()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"upgradeToAndCall(address,bytes)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"paused()\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\"\n                ]\n            },\n            \"pendingOwner()\": {\n                \"impacts\": [\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\"\n                ]\n            },\n            \"transferOwnership(address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"acceptOwnership()\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"owner()\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"renounceOwnership()\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"constructor()\": {\n                \"impacts\": [\n                    \"constructor()\",\n                    \"initialize(address,address,address,uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor()\",\n                    \"initialize(address,address,address,uint256,address)\"\n                ]\n            },\n            \"()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"initialize(address,address,address,uint256,address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"paused()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"constructor()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"paused()\",\n                    \"pendingOwner()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"constructor()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"pause()\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"paused()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"paused()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"unpause()\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"paused()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"paused()\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"payProposer(bytes)\": {\n                \"impacts\": [\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"enableAutoClaim(bool)\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ]\n            },\n            \"disableAutoClaim()\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ]\n            },\n            \"overrideReceiver(address,bool)\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ]\n            },\n            \"removeOverrideAddress(bool)\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ]\n            },\n            \"claimRewards()\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"paused()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\"\n                ]\n            },\n            \"claimOrphanedRewards(bytes[],address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"enableAutoClaim(bool)\",\n                    \"disableAutoClaim()\",\n                    \"overrideReceiver(address,bool)\",\n                    \"removeOverrideAddress(bool)\",\n                    \"claimRewards()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"removeFromAutoClaimBlacklist(address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"setVanillaRegistry(address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"setMevCommitAVS(address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"setMevCommitMiddleware(address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            },\n            \"setAutoClaimGasLimit(uint256)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"payProposer(bytes)\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"transferOwnership(address)\",\n                    \"acceptOwnership()\",\n                    \"owner()\",\n                    \"renounceOwnership()\",\n                    \"initialize(address,address,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"claimOrphanedRewards(bytes[],address)\",\n                    \"removeFromAutoClaimBlacklist(address)\",\n                    \"setVanillaRegistry(address)\",\n                    \"setMevCommitAVS(address)\",\n                    \"setMevCommitMiddleware(address)\",\n                    \"setAutoClaimGasLimit(uint256)\"\n                ]\n            }\n        },\n        \"RewardManagerStorage\": {},\n        \"Fuzz\": {\n            \"payProposer(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor()\": {\n                \"impacts\": [\n                    \"payProposer(bytes)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Setup\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"MevCommitAVSMock\": {},\n        \"MevCommitMiddlewareMock\": {},\n        \"VanillaRegistryMock\": {},\n        \"BaseProperties\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"PayProposerProperties\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"payProposer(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        }\n    },\n    \"constructors\": {\n        \"ERC1967Proxy\": \"constructor(address,bytes)\",\n        \"RewardManager\": \"constructor()\",\n        \"Fuzz\": \"constructor()\"\n    },\n    \"have_external_calls\": {\n        \"StdAssertions\": [\n            \"failed()\"\n        ],\n        \"Test\": [\n            \"failed()\"\n        ],\n        \"UUPSUpgradeable\": [\n            \"upgradeToAndCall(address,bytes)\"\n        ],\n        \"ERC1967Proxy\": [\n            \"()\",\n            \"constructor(address,bytes)\"\n        ],\n        \"RewardManager\": [\n            \"claimOrphanedRewards(bytes[],address)\",\n            \"upgradeToAndCall(address,bytes)\",\n            \"enableAutoClaim(bool)\",\n            \"payProposer(bytes)\",\n            \"claimRewards()\"\n        ],\n        \"Fuzz\": [\n            \"payProposer(bytes)\",\n            \"failed()\",\n            \"constructor()\"\n        ],\n        \"Setup\": [\n            \"failed()\"\n        ],\n        \"BaseProperties\": [\n            \"failed()\"\n        ],\n        \"PayProposerProperties\": [\n            \"payProposer(bytes)\",\n            \"failed()\"\n        ]\n    },\n    \"use_balance\": {},\n    \"solc_versions\": [\n        \"0.8.26\"\n    ],\n    \"with_fallback\": [\n        \"ERC1967Proxy\",\n        \"RewardManager\",\n        \"Proxy\"\n    ],\n    \"with_receive\": [\n        \"RewardManager\"\n    ]\n}", "first_markdown_element": "", "id": "b6f0631595002b161dee44f9ae80113da1cfd2bc81843f1c30042d831d454274", "printer": "echidna"}]}}
